(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    251819,       5103]
NotebookOptionsPosition[    247504,       4963]
NotebookOutlinePosition[    247879,       4980]
CellTagsIndexPosition[    247836,       4977]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lab 4: Competition", "Title",
 CellChangeTimes->{{3.399156883657976*^9, 3.39915689025331*^9}, 
   3.462694677609378*^9, {3.557645841017211*^9, 3.557645843860984*^9}}],

Cell["Lotka-Volterra Competition", "Section"],

Cell[CellGroupData[{

Cell[TextData[{
 "Consider two competing populations that follow the Lotka-Volterra \
competition equations\n\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       FractionBox[
        SubscriptBox["dn", "1"], "dt"], "=", 
       RowBox[{
        FormBox[
         RowBox[{
          SubscriptBox["r", "1"], 
          SubscriptBox["n", "1"]}],
         TraditionalForm], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FormBox[
           RowBox[{
            FractionBox[
             SubscriptBox["n", "1"], 
             SubscriptBox["k", "1"]], "-", 
            RowBox[{
             SubscriptBox["\[Alpha]", "12"], 
             FractionBox[
              SubscriptBox["n", "2"], 
              SubscriptBox["k", "1"]]}]}],
           TraditionalForm]}], ")"}]}]}]},
     {
      RowBox[{
       FractionBox[
        SubscriptBox["dn", "2"], "dt"], "=", 
       RowBox[{
        FormBox[
         RowBox[{
          SubscriptBox["r", "2"], 
          SubscriptBox["n", "2"]}],
         TraditionalForm], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FormBox[
           RowBox[{
            FractionBox[
             SubscriptBox["n", "2"], 
             SubscriptBox["k", "2"]], "-", 
            RowBox[{
             SubscriptBox["\[Alpha]", "21"], 
             FractionBox[
              SubscriptBox["n", "1"], 
              SubscriptBox["k", "2"]]}]}],
           TraditionalForm]}], ")"}]}]}]}
    }], TraditionalForm]]]
}], "Subsubtitle",
 CellChangeTimes->{{3.399157002810933*^9, 3.399157057683333*^9}}],

Cell[CellGroupData[{

Cell["\<\
Solve for equilibria analytically.  How many are they and what do they \
represent?\
\>", "Subsection",
 CellChangeTimes->{{3.399158977162401*^9, 3.399159015806711*^9}, {
  3.399159088590233*^9, 3.399159100002857*^9}, {3.557662232928092*^9, 
  3.5576622348141193`*^9}}],

Cell["\<\
There are four equilibria.  The first one is where species 1 is nonexistant \
and species 2 goes to carrying capacity.  The second is the coexistence \
point. The third one is where both species don\[CloseCurlyQuote]t exist.  The \
fourth one is where species 1 goes to carrying capacity and species 2 is \
nonexistant.\
\>", "Text",
 CellChangeTimes->{{3.5576622415932217`*^9, 3.55766226491264*^9}, {
  3.557662396557679*^9, 3.557662457815833*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"set", " ", "up", " ", "right", " ", "hand", " ", "sides"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f1", ":=", 
     RowBox[{"r1", "*", "n1", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"n1", "/", "k1"}], "-", 
        RowBox[{"\[Alpha]12", "*", 
         RowBox[{"n2", "/", "k1"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f2", ":=", 
     RowBox[{"r2", "*", "n2", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"n2", "/", "k2"}], "-", 
        RowBox[{"\[Alpha]21", "*", 
         RowBox[{"n1", "/", "k2"}]}]}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.399159027544194*^9, 3.3991590566815233`*^9}, {
  3.3991591575220137`*^9, 3.3991591833370247`*^9}, {3.3991597610118723`*^9, 
  3.39915977870851*^9}, {3.399161752191474*^9, 3.399161762125301*^9}, {
  3.558094293915636*^9, 3.558094300101389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"solve", " ", "for", " ", "equilibria"}], " ", "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"eq", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f1", "\[Equal]", "0"}], ",", 
       RowBox[{"f2", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "n2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.3991617662665777`*^9, 3.3991617875764437`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "k2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"k1", "-", 
         RowBox[{"k2", " ", "\[Alpha]12"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Alpha]12", " ", "\[Alpha]21"}]}]]}]}], ",", 
     RowBox[{"n2", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"k2", "-", 
         RowBox[{"k1", " ", "\[Alpha]21"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Alpha]12", " ", "\[Alpha]21"}]}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "k1"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5576621749493933`*^9, {3.558094193091385*^9, 3.558094200652755*^9}, 
   3.558094243368791*^9, 3.5580943025858727`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the Jacobian matrix", "Subsection",
 CellChangeTimes->{{3.399159144533195*^9, 3.3991591490002613`*^9}, {
  3.399159418676037*^9, 3.399159441735168*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j", ":=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"j", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.399159542950547*^9, 3.3991595431706142`*^9}, {
  3.3991595744632607`*^9, 3.399159627635407*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"n1", " ", "r1"}], "k1"]}], "+", 
       RowBox[{"r1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["n1", "k1"], "-", 
          FractionBox[
           RowBox[{"n2", " ", "\[Alpha]12"}], "k1"]}], ")"}]}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n1", " ", "r1", " ", "\[Alpha]12"}], "k1"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"n2", " ", "r2", " ", "\[Alpha]21"}], "k2"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"n2", " ", "r2"}], "k2"]}], "+", 
       RowBox[{"r2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["n2", "k2"], "-", 
          FractionBox[
           RowBox[{"n1", " ", "\[Alpha]21"}], "k2"]}], ")"}]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.557662176741634*^9, 3.558094203833888*^9, {3.558094245715616*^9, 
   3.558094247297511*^9}, 3.558094305999452*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Evaluate the Jacobian at all of the different equilibria.  Derive analytical \
conditions for the stability of the boundary equilibria and interpret them \
biologically.\
\>", "Subsection",
 CellChangeTimes->{{3.39915974013124*^9, 3.399159755046178*^9}, {
  3.3991599377788963`*^9, 3.399159968106894*^9}, {3.399160017627611*^9, 
  3.399160046473126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.399159756755185*^9, 3.39915980206854*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"r1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}], ")"}]}], "0"},
     {
      RowBox[{
       RowBox[{"-", "r2"}], " ", "\[Alpha]21"}], 
      RowBox[{"-", "r2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5580942496157503`*^9, 3.5580943083409977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}], "0"},
     {
      RowBox[{"-", "\[Alpha]21"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Input",
 CellChangeTimes->{3.5580942068309727`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Alpha]21"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.558094206930625*^9, 3.558094251261773*^9, 
  3.558094310975067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.399159930145673*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "r2"}], ",", 
   RowBox[{"r1", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}], ")"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.558094210643446*^9, 3.558094255963502*^9, 
  3.5580943123752623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.557663539088729*^9, 3.5576635411552753`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.55809421313759*^9, 3.558094257254456*^9, 
  3.558094314387109*^9}]
}, Open  ]],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"k2", " ", "\[Alpha]12"}], "k1"]],
  CellChangeTimes->{3.557662182703495*^9, 3.557662486666864*^9}],
 "is greater than one, then this point will be stable, otherwise it would be \
unstable.  Biologically, if the growth rate of species 1 when it\
\[CloseCurlyQuote]s rare is enough to invade species 2 when it\
\[CloseCurlyQuote]s at its carrying capacity, then this point would not be \
stable."
}], "Text",
 CellChangeTimes->{{3.55766284332493*^9, 3.5576628827274647`*^9}, {
  3.557662978198588*^9, 3.557662986435562*^9}, {3.557663543442274*^9, 
  3.557663578576416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.5576625491943207`*^9, 3.557662552421996*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"r1", "0"},
     {"0", "r2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.557662552686097*^9, 3.558094215689611*^9, 
  3.558094259641341*^9, 3.558094317369277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.557662524618713*^9, 3.5576625324387083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"r1", ",", "r2"}], "}"}]], "Output",
 CellChangeTimes->{3.557662538164935*^9, 3.55809421747084*^9, 
  3.558094263879532*^9, 3.558094319399919*^9}]
}, Open  ]],

Cell["\<\
This equilibrium point is unstable because both values are above 1.  \
Biologically, any perturbation would move the trajectories away from this \
equilibrium point.  This equil\
\>", "Text",
 CellChangeTimes->{{3.557662753937935*^9, 3.55766276577628*^9}, {
  3.557663348768375*^9, 3.5576633922057133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.557662571226008*^9, 3.557662574413563*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "r1"}], 
      RowBox[{
       RowBox[{"-", "r1"}], " ", "\[Alpha]12"}]},
     {"0", 
      RowBox[{"r2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"k1", " ", "\[Alpha]21"}], "k2"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.557662574686039*^9, 3.558094220667845*^9, 
  3.558094266379167*^9, 3.558094321934661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.557662529514799*^9, 3.557662535830782*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "r1"}], ",", 
   RowBox[{"r2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"k1", " ", "\[Alpha]21"}], "k2"]}], ")"}]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.5576625363562527`*^9, 3.55809422364707*^9, 
  3.558094326012876*^9}]
}, Open  ]],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"k1", " ", "\[Alpha]21"}], "k2"]],
  CellChangeTimes->{3.557662182703495*^9, 3.557662486666864*^9}],
 "is greater than one, then this point will be stable, otherwise it would be \
unstable.  Biologically, if the growth rate of species 2 when it\
\[CloseCurlyQuote]s rare is enough to invade species 1 when it\
\[CloseCurlyQuote]s at its carrying capacity, then this point would not be \
stable."
}], "Text",
 CellChangeTimes->{{3.55766358910295*^9, 3.5576636020323553`*^9}}],

Cell[BoxData[""], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Numerically solve the model for five different sets of parameters to \
illustrate the five possible outcomes (1 beats 2, 2 beats 1, 1 and 2 coexist, \
founder control, equivalent species).    Code is provided, just add \
parameters.  Use multiple different initial conditions to show different \
outcomes if they exist (founder control, equivalent species).  Then verify \
equilibrium densities and eigenvalues numerically.\
\>", "Subsection",
 CellChangeTimes->{{3.3991585836809483`*^9, 3.399158611724058*^9}, {
  3.399158861630262*^9, 3.399158893021276*^9}, {3.399160173067751*^9, 
  3.3991601734808598`*^9}, {3.399160292409515*^9, 3.399160304541976*^9}, {
  3.3991603720603247`*^9, 3.399160398226152*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "100"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"how", " ", "long", " ", "to", " ", "run"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "parameters", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]12", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]21", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "population", " ", "sizes"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n10", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n20", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"numerically", " ", "solve", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r1", "*", 
          RowBox[{"n1", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n1", "[", "t", "]"}], "/", "k1"}], "-", 
            RowBox[{"\[Alpha]12", "*", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/", "k1"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r2", "*", 
          RowBox[{"n2", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n2", "[", "t", "]"}], "/", "k2"}], "-", 
            RowBox[{"\[Alpha]21", "*", 
             RowBox[{
              RowBox[{"n1", "[", "t", "]"}], "/", "k2"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "n10"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "n20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "n1", " ", 
    RowBox[{"(", "green", ")"}], " ", "and", " ", "n2", " ", 
    RowBox[{"(", "blue", ")"}], " ", "vs", " ", "t"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], ",", 
        RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<n\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "isoclines", " ", "and", " ", "n2", " ", "vs", " ", "n1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isoplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k1", "/", "\[Alpha]12"}], "-", 
        RowBox[{"n1", "/", "\[Alpha]12"}]}], ",", 
       RowBox[{"k2", "-", 
        RowBox[{"\[Alpha]21", "*", "n1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "k1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "[", "t", "]"}], ",", 
         RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"isoplot", ",", "dynplot", ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "k1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n1\>\"", ",", "\"\<n2\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.399158444250602*^9, 3.3991585311933126`*^9}, {
  3.399158962969199*^9, 3.399158966336972*^9}, {3.399160058533679*^9, 
  3.399160108082533*^9}, {3.399160203312461*^9, 3.399160240630211*^9}, {
  3.399160496111902*^9, 3.399160502650592*^9}, {3.399161870581005*^9, 
  3.399161873828039*^9}, {3.399192790929306*^9, 3.399192796787238*^9}, {
  3.557662204443344*^9, 3.557662212002884*^9}, {3.557663842021274*^9, 
  3.5576638737459908`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
ncT//D/0AHWJ
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwVV3c8V/8btXclm2RlJ3v73Hsfe8sqI9khZGVVZFPqa0SyQhGRJCTrWsnK
poiGkV1IduLn99d9nddz7nnOee59Pfd9eR29Ta+QEBER7ZISEf3/ypf4Lz+H
qwW1+RNN9ONmNPaWSoT7mlsutk/OU8N7OgZrCS4rEHZ7hT0b+HXiUlsM1i7p
60rh1oT9pTO/YscXh4UwH9Yc5r3DZK1zvG59jsPSHmii+/91YGiv+3W5tDtY
5/0hnU3XfozxrP+wDG88thZNNx9cMohVc2uUDK3GY6HvXols5w1jhKWQtPdt
97A02Cr7898ods1w75t75H9Yl3JU7U/X71iETNmyVHES9oLAeFvu1SS2x+zu
kC+WjP2ecM71L5nCXhXOLrNUJWO3Oaim1/NmMFMFgXeh/Q+wtlorUunsH1jH
1nHzcqcUjMbqBb/vo1nsSsnTIOf9FOzRIyPX1f/msXiyHNfPKg+xb/J5d8Tv
LmDl4Xabk9MPMf5Pv4uvRS9iv999DN9JSMPKmR7+XL65jN29nPVvZesR1p08
4bvguor18Ykdd6PJwu6kp3WlSK1h0fHHa02+ZWFibpi1zKs1LGSW8XtmTTbm
R5l8y6/kN5bDydZPEZGDMY8q0TEIr2P0IyT37nnnYjWF09mvn61jZDrJBxnS
ediBpmzjWt4fLKp+z99O5gn2hPmrURLXBqa8X9ASW/sE05iN+S6RvYG5360b
LFV/it2LHiXyfrSJnTQ4b3zVOR9je3dT/dd/2xjz+0TH3+PPsPoHZ0bu0+5g
GV4/lW2jCzFbxx5nsbs7mPlD29w26SKsgJgr1iN6F5vmF0qhzX2OSUFL5+LN
v9gz1tPfUmtfYCMn3K3u7vzFRhb1Tn9MKMWCvzMsCQfuY3Q98r2Y+0us8bYz
rZvvP+ztqRlbFdlXmB5OaTTneoithw1ff3f/NSZ16LjJsnaIeehlz4+crsDu
89j1nSEQQQWbU4RVZQXm71gXYN5GBPV2d62Vf1ZibqRuXZ5UxLCePigzmliF
2RQwn44xIIYhUo6rropvMI05n7Y3I8SwVXtrcDa9GlOM42LrYyOBaWJvDnaT
t5iYcI/HnA0JqB6e0+g8XoMxugsxss6SgEiix3HBrFps+tdXh+BNUnBtSdIc
+9uAfUq49yZJiQwEu3+4j8/gWLeEEnVxKBns3fwgFjrUiFX4ppZ/JicHMflh
Fy7HZixiU+9QmYUC9L93L83fbsX803ZMzawpIDLN6FX4iXeYm0JhoUcOBSTR
h/8mLniHGd8gNsoWpAS3+7gP1ec2jOff2+x/8lTg3p2/dSqgA2PKubLGfIsK
xDhWFNcFOzEqjFFDvIkKfpLulxK+dmKr4V7LttrUwJWmPuFp0Y01kgkoN1vQ
AJGrnsSbqF6s4tnQf2NZR/hbf2CFdR9WqBU+tfadBl77+dDEyfdjCXcm7vC6
0UJC5dsYj9sD2GW6B6ORwXSwEDa7rOY4hBm/xM5mNdCBHR0ft9PUEKZh9Ot2
JdEx0J+fvbbtOIyJJekI/rhzDJr/dWz5XhvB9hkP/TUzjkNqazpKm/sJ6z0m
T012mR5MpPytbnpMYEP6DOl9IfRAgryzmyD5go3dXRHMyKaHssXEnudZX7Af
5EUa4l/ooW8/fF568Cu2/4813PLSSUDIBjXy+Ccx0ZXdrVIrBviy+MrbtHga
kxT7FBN0gwFqGD9s1O9OY/LuFUxqGQzAW5FuP6Y7g6nNuUuPjjGA74rG5MDC
DGb1beIasSUj7Hwf0kW5ZzFbzpr9D0GM4HSp0wt3n8WcrVPvpT1ihBqnUl6Z
N7OYzyeD4rOjjHDPc3visdYcdqcP/3HhIhNIRY7oFFvOYwl0mdd5Apkg5IWr
NlvGPJaqF0iy/JAJqjRWscrReSy3XZwn/CMTqDkW2lOfX8AKyGhf6W0yga/Z
+zOpcQtYido8wszMDMmLFY6L+AJW3Zh7qcScGeKuBrA+OrOINezfWvL3Z4bd
85lh70wXsVZlyxtYKjNMKu1LOIQtYp3BslQ0VczwauIcv03xItZXTf9oZJgZ
nn8q1noysIiNbPwUyP3DDKSKGjGnNxexcemuqquMLDA+Qj/fyLKETfo8U5eV
YYHGlY63AXJL2GxZxNCBKQt8c7e+K22yhC39vOzQ5ccCL9lVpOauLmFrospr
KQ9YIN1xiC06bAnbcmMJs61ggYSJCQ7iB0vYfuH6MZEhFnB4+JTV9MkSRjLb
l/3nNwsc97UyuvZyCaM68+Js40lWaLtLSWJQvYQdd4iruyPFCrx16xPz9UsY
U66TrpkJK3jtLPUoNy5hHF+xsdO+rCB+Jr5FFV/CeE5xui4ksYJvEMH/b80S
Jmi1s1lRzgqsFGRFLq+XsLOPRqJDB1ihXFbjdlThEib5sZxRZ40V9Mkdrl1I
X8LkGf97ykDPBsFaOU6TsUsYweSq1FcJNiDnt04Q9lvC1BI1m4vOswGT0u9/
stZLWLheVfGQFxv8mvvSl4MtYY3kZ1L+/ccG5v/keA94j/I2J4cIv2QDHfEG
bxviJUw5hMjFrIcNssWiedq/LmLBCt7nby+zwY3tV9w6bxex6vWvisU07DD0
ptR39b9FTOZqPe2hDjsUOdsPLUsvYn78opsibuxgdevLQ0fiRaz8e/o38zh2
SMRt30LvAiZ2MfB1yXt2kKEeo4m8vIDxq0tZXFTjgEe55HN2jvOY40EuRDhw
wG86I3ELrnksr/a4aGk4Bxh/uTfhNDaHcUr+3Cdu4oBRlZ4Nbu05jPl00dOX
Kqeg/u6gyfTJWYxim3OFTI4T+FiyWWmuT2MaFfdGJcw5of7WjrcC5zQWeW2v
2fo6J/x86vbv2Psp7GBmNKX8NSe85+kzZGaZwrYHHijZiJ+GhRqJLQqf79hC
CVVMpRAXyBVku1BzjGOCLkFe37S4QNPFS1ki4DPmzDtnQe3CBdVb4ncoh8aw
yUfvRO0KuKA9wWVTPnkU+xx9e4CGlxs2aFXFyIQ/Ylck9o5JHeMBGX136dX3
A5jBRNwzNi4eMIx3NdVUHsBk45gRIgkeSHunu+Dk1I+RfZf07DfmAYGmVq43
Zr3Y0wTX7mupPFCusG3PG9aFxStvOlx4xgOuqpnCoRmdmO9c5C6hmgeqTim9
+VfbgQGaI0w3xgN1Z70L5Y61Y99/jcSWnOKFwqpj8f17rVh7hiPXAzFe0JFT
ep+h0YqVaa69uYHwwtoncda/KS3Y7ce0szp2vBDjPbnJrd6MuehmhEj68ILu
q1xWJ80mzHBTkIktghccCL5zy8cbMU5DNfX5p7wQe6g7atpcj5Ht9o/3VfLC
O+RZRGtRHbZccNmvuo0Xyua1h+vSa7G6/eAnMXO8YGy6XmOX9hazKn11eEaU
DyxXqMrF9yoxsEQe0arwAdnGyHq6UCUmTPZB/I8+H/wSa+hosqnAdi7NXW69
xgd9imiZw9dybJLSf7P4Nh+oSkbVXhMuxzoqif9LTuSD2QcDV8s2yrA02tMN
9q/5YLsyMuqTUyl2+22JmU7rkV7PZS5r8RfYFSfFZYlhPhCcWfj9m6wEk603
4zjc4IP4PvnZ7pEibNg9Pvix4hkI5ZZ+mbGRj9WxsNHH6J6Bncpj43zM+djT
1mdFntZnYP6l0OcB9Cnmx9HySSXkDGR1f23SKc3DrNuNvM78dwaOp2vMzH/L
xVT9vpDT5pyBbz6W34gCcjD67m3Z8aYzsJ/Yb8jel4XtBMT0tAycgTd5k78O
EjOx77yMzsVTZ0D4re9lV7sMrOyGeEowKT8sqXKU5PE/wtIEGkTtmfjhQ/PI
vSD2NOz2oG6rtgA/PFzYHhphf4gZilz5zaLNDy4dBF9NlRRs715A/deL/DDY
aS9yyv0B9nwlJqbAhR/eCniNhzxJxsiqCtmlY/lh7zLfy1ThJKyC5e3MzkN+
MF4bOW26moDZ3eh42fSMH0xv8W6zZv+H1aELqobv+aHcYtwJ476HuT3ZoWX6
yA85EVHV0Rt3MWYy6k/jP/hB7PztM4RPdzCfLhF3NzIBePqYR5ELj8UEzT0e
RKkLAPmplgsjtFHYSPUtGz0zAQh0IN9cUYjEItjvC550EoBxk4AF0msR2Jdv
pXU5kQLA/2Nb03QqDItXxaOvPBCAlxRKWVyhtzHFgl4jsacC4Fqz6HlGOBRL
uboyXdsiAMPCFrhG8U0Meg5KwwcFwKzK1kLl9g1sRfxEkPaUANh2Pmw+YR+M
6W1I0H4kEoS4uBl/Pp1AbOcifMyiF4TxINHXNoYB2LNa41xHHkH4m9g9733Z
HyMK85VZwwRhZ+3sBeNsP6xsKuJf9XlB2Lt9jUe52xe7pPGgI9ROEGLVLS3V
iX2xaurKS7RhgiA3sjN2lcEbc/Z8JzCUIAg9T9zG6iuuYSf7h1fTcwThwrWV
35cdPTHP1I0owUZByD6e8oX911WMY5vM6FevIORrcO3vtLthHVbMbFVfBWFW
4MTripeuGB+3fKnqP0Fwel+4lpx7BRuI0AqkOiYEY2O9BbXFztjtHxehn1MI
DlkR5spGJ+xzcdCIDUEI+LrmRoQoHbFYujs5ZwyEQPw7Y9V7JQdM1jvdbemS
EJw5O8wVEGCPJcnW7gfdEoLU0NJva3S2GPqoqx29JwQBptVlNNU22PLu5yTy
LCG4Nb4TruF1CdNq2uNPqROCn/28FU+orbANXtpVq24hGH4kxRG/bIE9iT5V
yzMuBLytXh6c4xexfV2CYdnuEb7hmUY8YY6VlBqwBlALw2vLq/NWP80wixOX
p1TYhaEjOPasCZUZVjESGtClKAwG5xMZJWxNsOcxzo7TusLQGk68vhJrjOXI
65//ay0M458vJHH4n8fi09lEzoUKg5RjLfnaTQMsXPeQWStBGNoXC2Oz2fWx
wL1ZErtcYfCvuC2j3aWLOdlUfklqEQa2d3X0SZbamPWxzK7iIWFI7640LZXX
wowbw6tbZ474aa1Ha0UTI/AYJW2Qi4CcUHanPJ86Jj0oG3qMVQQwm2fXXWTV
MOHIU+6CwiLwZOS5xylTVYzpx4K6pZ4IMM+U7f13CcNoHvZL+l4SgQXma8pB
HxGMSKv6dLynCNw8ZWNt5EjAfhZFbdcniMBk7MUfrK+VsGlL9x8juSLgcdOX
TNNXERujNhn8VS4CpsY/Jv+AAvbeg+sF97AINC6aVG/SymENnOTpij9EgLXK
AcbIZbGK3uVok00RWNF1nHajk8FyJGpto1hFQXXYrccAkcJSJ3P1s4VFwWj7
5YlwF0ksPjlW8Y2SKFCwnfiEyEpggX/MGOYvicIbqcQMOUQM8yxQPjz0FAVq
IZloka+imOMF3p9st0Wh+LZjimqCCGb0duW9Xp4o+HkKll/lEcI03D5WOL0+
wsvTjzcOBTBl9obckFZRIF+cVE74xY8J3bp7o+yHKLzLe3FXYo0P4xLzcenY
FIWmM+c8Zkj5MKavF80mKc7CJw9CEcsZXowI4z/HIHIWElQUxV+RcmNbqzQc
Z5XPwuUXZTRF4aexn3m/KTT0zwLP+girKz0nNkbSNBlw7SzMuM7LjDuzY32V
z3oTbp+Ff+T9NtNCbFib8/26osSzQJ/yNt9ijwV73W6V+vn1WSD3zMwK6mbC
ngdBxHrrWdg/L0/9qZ0RyxEW8qIdOQvLdhXn5voZsPj4DW1k6yw8ZU+cTCE/
iYWrTMhepBQDetGpqh1JeizwZwuvN5sY3KmlT/HpPY45GiX+zVMWg/zPUu6d
32gxy8OAhVp9MRCz1M7AI2kwo3Kbj0M2YhD0Q+v8EwVqTIVB9BVZmBikbhgu
zwxQYH3E1l29iWJATCJBulxDjtn/vjuTlicGPol+5S5lZFj0wCKrSKsYVG23
fGRoIsFYmtml14fEoO5YfvveGDFW/ErXoH5GDJg86w1m/xFhfQnF4Ybk5yC8
a9MjrfcAtb/9OZOF5RwI+nYjaWb/0PVr1G++C54D9nGKyy+X/6KshlcXfXXO
QbqP/6cko120hJBBqmJ1Dr6QyfNNs+6gBLGu02Tu5yD+1tkd/rUt1J5WxDTt
3jkoGRQISO3eQNf3LD3tss8BmfUtOZMPf9DopTuxwi/PQS3JJVr1sXW0uGuh
rq7vHCCBa2y5TL9RQi3bx6jv58ChJpt0U20N7Xuus2qwduRHj/Lvq60VdD3u
+ZnvJ8UhpIJ0O5j+JxodNIY85xOHDQvm+aG3SyiLK5Wlr4w4iF4QMmzzXkRV
tNzuk14Qh+llFtA5Po/2yaUX9lwRh61+KwmdP7OovUBn88NAcZjrSmbCZ3+g
0WTCm0Lp4hDzm0KlZG0aZdmwOPH7uThk+Lko0VJNo89n4kTqasXB0/NFxhPR
KbS3df6ywYQ4fK1Mz7nO9R21r2ANZv4pDjyPvQU18r6i60+0H3zbFweJ8c8t
BrJfUJaIonYfLglQurf1ZivxM/rcZ3RSSUIC1h6fsaW+OIaq2FP+JQEJkFel
s1Y5O4raY64SDx0kwO7PP4XJwxF0XfyRrq2fBBAv2zL/+DeMRnN1OAlFScBD
nsl6baphtPifYHptgQQs3l5O2sUGUcKvixWRbyTgUlvXhXOeA2jfl9ge/XYJ
sCWZ4mHT7EfX6+eIvs1LANlDbrbzFj1ozAuWU0U7EvB2x7iJ4W83et8wn6OG
TBKW/9ZfTnvVhXIhw7IRzJLQrddT167dgc7LLrfMnpYEQ/0algWRdrRcjPS8
nqAk8F3wKKhgf4+qccpcZVSQhCaTCY9s7ncoLZP+VhAmCY0cSUWFsq3oCK1T
1BftI31K3wmyCy2o698Hj59ZSsKAcUckp0cTmmr0890Ne0mQn0lryiZpRJuf
aC4ZuknCzVtsn/hKGlA2nR35rSBJoHN649ctWIdqZJlc7g478tcYs1uxV4P6
rJRE5cRJAvwUYjj35S3amXp5QOuRJKQ6mCEO79+gG/PVWxy5kkAfwrw++aEK
5VGhP71aKAlRx06Fhn6tRIOnWq8+qpYEry8fk59zV6AFspxJHo2SoEHEr3Xl
/Gt0IC6gGmuXhLzrjlPX75SjIuLCpAsfJYHrfPZ7atEy9GJEhEjDV0k4KGN6
fr+/FI0cGT+fNCsJdzyKo19Fv0DHb/6XrbgpCTFvnSwHOYpRir65Vrp/kvBK
oOiK0V4RKs0Li5NkUmDHY1EXMFeIxnesy91lkgIf0vE4sZkCtJrDwOYypxR8
t5cI7l/PR6evPYuU4peCLPWYpAvH8lFlJsv+zzJScNKELkfA4Qnq4vp686WK
FIxalLwPychDH9TRcEaqSwGJoubG0ze56LI97iZqJgV9i9oqor+yUbYqlsQD
ayl4rxi0lp+XhWpQ+rwZcpQCsskL2iJOmWj2Sz6SW35SMDVCMt/FkI52EoUI
n78pBWG/VatzDtLQDbOPRmcipQAjY5Bd33qIGuzFZX1IlgLhEi2dOzSpaLDh
VEtuhhSY0XFeieZPQQvylBeuP5ECLsivvKXzAN3X+iXL+VoK0j9UhhFeJqHC
mVqX1mqkQLJWULxwPBE1/5Ub0dYsBZm5RvunPRPQlymmfZ4DUkf79k3iRtM9
dHzuxQaMScEl3GnqU3g8SqFMfop5Ugp6YyyWaYzvoraTb13xVSnIpXgK/ixx
aLzMyYTkbSlgWlHnvkkXi1bHulddOZSC9VyO39ePx6DHz50mPn5CGuYcD3wc
ZKNQ5fBAoWkWadi8bsHjbBGJugz3G1ZzScOV86Hvg6Mj0MYbkZm24tLQ2J0w
v7wZhi71TDRLy0tDJ+a9Px57G2XhkZunQKWhBi+0lBQORb3b52VeGUoDD/cO
MpdxE22GUg+xi9JAPvwwcPP8DZS+3ie/2FYa7maf8bBlCUbLX+0yFHhLQ97Z
v62jAwEokWijHm/wEb+/Tl3unT9qUhAZmRMuDe7qF+tjW6+j6+m06+nJ0mB5
ia4794cvqsY4IMKSKQ0LMwrm/eS+aMp/qQ4pT6WhpZhqw1vKB5WNPD34X+WR
H4nyJ8qG19Do/Skq2gZpcAk1UX/5zQP9GFgId9qkoZzm5+i3CHc00EOiPPKj
NFR8NxeR2nNF22f/zB9+Pcor0HHsRa8Lympfwx06Jw3FRTdl015dQWvMVROD
tqWhbYwNyc5yQqn6yTs2DqUh82tyyOsCR9RSt/vAl0oGVLwecP+odUB3ETMv
T3YZqBC3Na+ksEf1algLF3llgKQ2Nun1TVs0U/rLVxdRGdDg7+yw3rdBlYWu
GDqoyMA2D9vLZUVrNP6JSMw3dRmwKLPmnv1tiU6cWmm4ZCADgbWrfM71FmgI
fZDYxcsyUGNjJZgWegHtiVdxHr4iA5leEc41/uboaXKibGMvGVjk23rtfMMM
bdy9Q6sfJgN3xtsk5otM0OP+huqdcTLgn5yjTDpgjNqtnLylmSQDTKZt1HIk
xijRTOYS9kQGTpXPmX0gMUSNL9vx4cUy8Osx89X6DH30yegZa+UKGbi4Nyf/
EPRQtZ7SLtl3MjAUqNAS1qCNPtDyJa74IAPU+TJP/0vSQqeb5ZQkRmRA58MV
0hI/TTTqTeNzkVkZOCHskkhlp46OSERNFv6SgRa319+03dRQ/hJtNv4tGZjH
xbYTQ1XRtpyBOC5KWXBZmvXhTcVQJvaHTVknZGFq+WqmGBGKXkmx2mZjk4UP
sd8z1cMJKMWdaRdGEVlQSC13OVOnhF4kKcpJkpKFf/eYLlT6KaJFIR6fjinL
Qo/QLfuvBAVUx3dDk0pfFkovOjAlkMqh6cs1oTFmskDivfh94kAGXbwS+obE
RhbUszc1DKhl0HhrCoF/nrLQdW33UqK2FIpK0m0t+svCzdPXG+diJdHf5Awd
n0JkIZWqoPF+ngRq+fr01fL7srDaKVxZti+G0sadUX6cepSnWMNJ791ZtNFG
hDY+Wxaoh0fi3dJFUQEquZdOpbIw8uWvco6bMDr2Vfm2cZUslJfMN6/YC6H3
K+E80iALNdm/a2QcBdF1W4PfLD2y8FGMyZvpJj/a/MZJrntZFgJWnSnXyXhR
/3tXKd7+kYXx+oCfPio8qJCD92j+X1mgX5+2bVnnQhPobt0IpZWD5Dqy2+rM
nKjqdLieO6McfMqjpNys40A33saesjglB1bpyWcLr7Gjl5we4JJn5eDj0rKg
wA4LelwpPeG0jBzMfU39RdzPjLYez7GjUZGDjZOBEvvlTKhwXTHxDz05aBxa
WgtKYUC/JL4aGjCVAxu9yxuvUk6iiVfe5OPWckD3d/P8pRx6dIu+RfORuxzE
ZpB//P38GFoy184S7ScHUk8+nVMnpkMvN/TM+9yUA9HC9z/NfWlQ+gdDNZcj
5YCaVjvs6y4V2uY6dlcvXg68pftNU7Io0SDkm7XCAzmICBsaEbOgQEUZf5zl
z5SD7+bv/ezPkaPfFhb36Z/KgRwzZ+YPLjI0uXG191+xHKSe0a/xFiNFNVI3
c5Zey4G/8OWVpgsk6M7Vv96jtXJghB9/zpVCjL7AiFXbWo74+W66MVNEqC0z
JcPrLjkQdhkTOvpbRxmW6WYeD8rBKvcjqdGLh8j7Zoaq+M9yoG9pNzOqfYCI
eXJddF6Ug7Q+YseTV/eRSVV+IZPfR34VH0Trp/xFUlhFd5BdOaD97sOX2b2H
7LXKZbJSy0OkUsytIPNdpJPd8Fu3sDy0nazSEorbQpw6brlIucmDvWZ+277w
b8SZIGi05S0P6oteU0u31hCX1wNy9UHyYIWX8LukrSJuWQLkmnHyUPvNlsT7
7U/Ey7s/37JQHjLjcvhans0hPj9u3DtdJg+3lbYYSc7NIr5W/Nen38hDwcGH
t9T4DOKvfkPN87086AaetArbn0QCa86ISvXKwzI53+pPm+9I0Lm+k1sj8uBY
ZsP835cvyE3WM1NhP+SBiKntCaXSGBJyv7dT4+dRnhh6vQ2OT0gocXA59YY8
1KyM2r3lG0FuB/Kl9/2Vh3ARUbJx0yEkfLknLIVUAQZOsFrOvhxAIu2DXC1p
FYB/x2a3zbMPifrIe/40owLotK6Mmnz5gETr9chPcyjAnU71UuP7XUhsUyBX
EZ8CNORx3aT06kDuyPJSeIoqQJI7diwx/D1yt/jDL0lpBXik6SJF9O4dEs8V
+HFTSQEWjM0qrsu2IvdTePA6VQV486L9EslIM5JA9aEgTFcBTi8T/bmr2oQk
hgbc1zBRgK9ZEWXPZXAkaZ3bn9pKAeieJ0Y8CKlHHrh2X+qzVwBFoxekNzjq
kNQv/uopbgpg0Wve8x9tLfLQhPuspY8CSDrTXScxqkHS2rsYTgcrgKmJaSLV
5FskXcV/bypMAQKGC2sGm94imeVc04VxCuAoEh+buPwWyRLo6vJIVIC65JCk
6w41SHbm9deSjxTgWe1QsenJWiTnBFfGZo4CuI4b5V/9UovkRXeG1xUqgGD+
Eh5bX4c82fVzCytTADLtTjHi5/VIwUyHAnWjAuT9Ghx2T8CRQks/7r73CjB9
Uc2P6lYjUtTLSZnSqwCGbqFS9tZNyHO1jhWLjwrwtMT06Q+GZqTkre8nzq8K
kCjs5W3o0YyUinE2Tv1QgAjtp+wslc3Iyyftzwp/KgAjb7jy0lwzUsbi+5/H
hgL87kv3CCBtQcrvnQqQ3D96Xu6hWk7kLUgFUbvNJqkiHD/e5Gy32IxUBvho
1NEqQsrQih1zaTNStcQhFsaoCIpVAtaUhs1Itd17Ro1TilBUp/pPsKUJqRnx
/kt1RhEGixyfaY42IrW6HDO9ooqwLxr+bfcLjjTIeFdYKCtC7LedbrvaegR/
zp7JqaYIM2Q7UxLJdUjj6baIKV1FGClVMRmyrkVaKNlNPKwUYcdz7LD7fTUy
ly+u99lBEfTedNDv6b5B6EBDXdtdERKc57uFmysRy2BvuTO3FCE5R2jMPqYc
uc0UI54cpQhVO4d/Xr14iRSUZwod3lOEN31rbebyJcjqwnv2iWxF0CC3e0Gw
zkeYYiYYdJ8pQtfDP/WuQnmIMu9v2rcvFaHN8eqnFpVMxB6nIBeoVoSf5Rp+
xrdSkVgrzoMHjYrAJraetsWRgJRuSm0TdRzp8R9ri/4RhQwla6959StCQ2rV
aFqhP3K6229ab1IRqG4Nm2yHeuBqLncmahYUgWDDd+MUSSjuRpIzIvj7aD7G
f0WuhMbgCTmVvam7ikCqWckZPXIPr1LuaichUYIPMTZ6cu+S8PFP35p8aJSA
x5RC975uCk50faPmG4MSRFJa0GiHPsQFT9BUGJxSgtVnRglXbB/h+i+4X9Sd
UYL+8suCbb/ScR9tuQJhMSVIJQ6I9FPLxNNm9B6nySpB68EN2gaXLLwhzD6N
DFGCs889W/Kss/HpU4GJfppKMPTPoICH6zFOVXPvzqShElQdclSpvH6Mi5s/
iTC6eFR/+WntN2MObr5WfbPBVgnEqcKt1bVy8Bv3e66LuipB13HW3xI6OXiO
8LRnurcSlLZkVb1lz8Hb2ravUAQrQSfP8WfjdY/xJftjdv7hSsAr5tWafvYx
Tv+Pz3L6jhK8namnW/fIxuUzFE2Mk5XgrvZ21NytLNxGzkivMUMJ0i14hAMv
ZeKRg07qYk+VYJpRYTePJgMvunaDkFmiBFkhKtsudx/hPdSJclSVRzj5HF/n
6EN8/VmBeGC9ElArD+0fo0vF0W/9PKY9SqCcFDTBkpKEfzQSJKdZUYL8ydNS
kmg0vrekchC0pQSMUqmrxYoROE+cyfbsgRL0LZB+UU0KwT2bQhZbTihDQXHc
hWMGvviDSw+mJdiUobDDruDjoCtes1008ZhHGdgYOFVom6xxUsnh3htSytAm
sdbyi18PEe5ZaJ9XUoaeNrdVy0M7xMjtoOmCmjLs/jweJsx3FfEnY6p9p6cM
ci6jzavrPkhmnkiFlJky9JYJJq9QBCDNBOxF7iVloOk9ecegMxiZGzMvOOas
DOvN6c+oFUIQugD3x7c8lSEyvn5RwCwMkToZnrborwzVTEiJ8fEIpI5qVLgj
RBmMnx4dCOQiETUi8fqCaGUo4Sm7l6QUhXzYjjaMvK8MlElm+yrs0Yj56sR3
u1Rl0FhLY10diUa+zEn7IdnKcF41+GuxZwxy5dtdslMFRzhq29BzMgZZ+TiZ
tvNCGcSrma7KS8Yigb0KIp8qlWHpc784lU0sctiWUF9Zrwz/rQjnTjnFInca
Zg2T3ynDiQ3uulbtWIS+ijDp9UEZbi1Vhb2gjEUyXqT4GQwrQ8vg/GpWfgzC
l79EJjpxNM+12pgyzhikJFP1EeXMEY7R6q6Li0Ya7q7Wt64rH33/WHjC9aMQ
zQgto7y9o7yKVlJKBZFIX/DjyVASFXDn+Bz7aSsC+e6qT67EoALplokH+N1w
hESryOiVlAqMBL9QDe+5idxDDibvK6mAyIeDInnOGwiT3IXr7qoqwNT2Ie2N
XRAiwE+aLmCiAsvFQ8eOtV5HdEjsprJ8VGCc0tmcZcsVGdx9c/1GsArU9bsO
GvA4I9a/6SgswlVgAQ0jSATZIx6TdaIMSSrAJjRUu3rBDNkYPYmvPlIBm+lf
OsHcekhIv9v53lwVsBSlexlxj4AkNLL433mlAjzvAh/eungOZ62+RuHyVgX2
iz6La7Oq4nkv29LVm1TggJiyGRPUw4WfnTrL23HU75ufgYaqCf462w8/6FOB
zpW6L/QsF3Dl1K7zXz6pAH35RFJMsiXeeo9nuvabCjjyfXR7WnkJ148K8n80
pwJ3tIqcXUNs8ZGbfRQBKypAe1xEbSnAHr/sJ5BhuqUCcYNLMxvhDvjc1ZCz
kgcqUPMr/ZGZnSPu5TCMH6MgwD5HnAY3hxO+bSlqvHyMAFOrMicr65zwcOOI
6U5mAhSWlZw6oeqMU+mM+ReeJgBmsewk89IZT8YkKKMFCNC5uLnIfeiMcyjE
ZjicI4CkS/fLEfkruJigbCMnQoB8zsGVNIsrOMI8PT1qQIDcm4eCN09cwdvp
lALemBPA8857brY2Z9yILIkyxYYAIuEXLt62dcZH/85l+DgToM7hVXfpNyfc
/g8iZuRJALFzwyH5Gk74MQaigRF/AoR+7fQ/Hu6I10m2Xr8USoATOy/hRbYD
7no+mnU65ihPSOTkjUx7nMlLq94tgQCLo/efb6zb4i33qexW0whgObfnPvqf
De71opskMJcAn2b+++FrZY2f6r5fuF9EAJ+/XcdarS3xzgUjvahyAvg/+9Nw
PekiHkB5coW6lgAh1uc7pXfNcT7B4eSkFgL8eMBL8SLFDO/XeCjH2k0AtKPM
4I6tKR7iZPH58dDRvL1V/AItTXCRSPZQ/gkCpJHTGfKGG+Of8iZ4Xswc+SHu
drn6/Dwe1fS4TeonAcgqmbdrCo1wyW92bjUbR/1ORm/f2THE40/9ePWeHAHO
9J97VPcN8R+WbttDLAhonNb/WGhohCcHiWZZcSOQtOvJx8l+HkfTfqKTQkf8
1OubJ5iM8eWqsmkXSQTA8MkvsgZjPH3YJ/aXIgLxPGQDbFEmuOa6tKi/KgKx
sZN+266m+Dr9Zu+eLgIl2zdLDa6a4bkSb30jTBEI/slq1hZjjhsY3WCmuoSA
59e/BJqGC/iup0ptghMCe2oe0E1jgRfe+2fD7IlAzsMSmXIfS5yoK6KALxQB
/h8lao9DLuEv59V1imMQOBjYoNnnvoxbU1D8lEhAYPo+D6fkR1u8Sj1eBslF
YKCYtXZGwQF3a3zQatGCgNszM3GM5wo+UJk/eZ8chXmBADPZlGt46NCVaMbj
KPw3WCU/ku+Fi/4WEs5kQeGh8F0fvMIbjxYv9S4SQuGrM6Hb4YcPLmXoxSgu
iYKolqeolqsv/s1D8m2VIgoFm6J0f+d9ccXiqoMWXRTSFTJEI6f88NmOwKc6
pigYU3iYllhdxx/MKWr1W6Pw6hT9kFHfdfznGfy/Lx4oTD9ge1Xzwh/PUAuT
cvJH4Y9kzvYwYwCu5aD6cTEEBcEEFS/WoAD8Sc57zu3/UAg5IG5oPReIZ9uI
jV5IQ4FNOJGFNiwQT+dISa7KQQGmDOQduwPxlLFdfcYiFDzDbJ8FnQjCE9Ls
KfxeHfm3nP+1ZxiE3zXvaB54i8JBM01mVkwQHs0gfkuiGQWfEz9lqKuD8LCB
VLmEThTIMso0/3wLwm8m/F39OYCCamWAFTVRMO5D0+VcMoVC52rOqyCRYNwl
Nu2z6zoKUr6RcQMSwbiDxr+U9j0U7jr44bQCwbgNibORACkGJTPK0kn0wbhF
czdVNC0GpwwPvY+tB+Gmt6XeTTNiYP9nmkimKwg3JKSHqnJicHiW2rv8YRCu
s3egkMePwW2DhxpyFkG4es2V9QMxDBxLSmh9jwXhaGBP6WU5DKSyPI0YawJx
JVkZ1wYEA1//g7QPFwNx2fUM3lNaGBTei/LWXQzAJcuJvtwwwkBHntuR4B2A
n/VyTRu7iMFu18aO2YI/LijWZ6xgd6SXLdSImfvjfEuytGmuR/5IJlReVVzH
2VxIws2CMeCZMr47qumHM/JfVa4Ix+A5mfW11Ru++PHp/g36uxiwscYbvyrw
wclsH1/ty8DAg+jSxiGfF354ioz/3FMMqF9Tf9h77onvfXb/dq8Eg84lWj4T
zANfu6BopluPASvFalBflhu+zJh77Pk7DMZ/qcabO7jic4PknRQ9GAh79Khv
yLngXwyHCW1fMOiT9hxGaY/2I63yNt8sBpZRfxp0aJ3woa681xG/MBgNSPMX
ZXfEe+MoPSc3MXA6djw6RdYB79T0EsQOMGA3ZAyQuWyPT0e4rxmRAqx6Nz69
LmCHf598bHibEqDt6QXN0uLL+HgOGdXXEwBUCnppp/9a42P/FK7QMR3xC+55
MHVY4R9tPFpV2AAK7qQGVxZb4kP1OdwenACMC58GrJ5a4AMcQyGZPADKXW1x
LuUX8b4b5ONd/ADx0gPlisMX8A9jigq7wgBuoh52EjQX8E4Fz1ThcwBD1ZRF
xebmeHta7m8LKYDxr6xZFBVmeNvmkFGcHMDnZ8fOP+M1w1vMKUqrlQAEmS99
+vHUFG+sVKKeO1pnQ1J+GvxypngDwzUXZjWAXeL3pa2jJnidb947DS2A9Xvv
+bjjTfCagWEefz2AuY+zten6Jni1BOXtfKMj/3OPYhJOmeCVCcoTQ6YAL1sN
M+x2jXGG59PiT6wBykjb/t74Yoz7tMRHejsCfLWUuByzaIxz99mWXnQBMGV/
xBZ2YIz3jUt/QtwBMu/m37zGaYKHzlMQCXgB5PBt7/WqmeBiG+MidH4AOpdl
T3L5muATRK/M/gQA3Kv4JztRaILHH4sKHb8BcD5r82vkjAmuxGFR1BIKEJnU
GPVA0BRfEDw7+DwCgJ727+M4b1P8kczhXmLMUZ4ow4LvuCmuBcP8QXcB/ly3
PM520gwvsLoVrJkMcOEx70/uNjPczOX8U7GHAHc6+c8v8ZnjJNfP9DBmADwx
ct+IjzbH7e9/4J7OA1A6r/VDw+gCztl0quN2OcC3S5Te5r8u4h8+rK5dqQLg
T5/evWtugd8ce8dhWANQtcUYHVFngY/99vA61QzgckASUBpuiccdYOkkbQCO
GeQfxr9b4vK0TK2LHQDWygsHzSpWeCp/A3NN/5Ff39FvJfNWuLpUEpY7DOC5
J3yzWN4aX0ecr8aOAjz0/DF4Idwaf6KnmHJtAsBKtfTyuTZr3NiCDjf/DlD4
m+/hS+JL+KHT5JzKzFH/raVVM8VLeJlPFf2ZeYC4zsLZx66X8Muhd5RplgG2
Jnd+USVewunibZx/rwDk1USFM5RdwjsbSmkTDgDISNLvKvRcwqNX9ytEj6vC
BtVB+k2VS7jM/sCXkwyqQJhgOSGwY41PUz2j2GVWhb8CLfXmRdZ4MvMNyUl2
VeByzGWJ07HGgc/QuuO0KjygMn+kNGGFr4rzRpfxqoLag4g3i7ZWeI7K5suH
AqrAGdy9wDRsiRvqdI2GiKgCnczgc0UFS3zf/DGx8zlVOFBRvDYUb4G/cPA9
qy+lCpO0T1/a9V7Erb00L0jLqcLjU6+nLh9cwGvifj0nQlRheZo0tumcOe5f
hxg/NlAF52eaKuovjPE31h0kn41Voc44rvt+6nl8a8/4DdMFVRDYMIoimjbE
b6g4c9y/rApbVDe8JUr08LqJXz0dDqpQGbCt486vi+/fCgojdVGF2wE3hk++
1MZvN8T/uOmlCrMCzdqFCxp4kw3To2o/VTg9mDfKkKWOE/17rLseqAqF5Ljz
srUaHom8LrsapgqZRJOt34kBf/dV2eFZlCpsRpH7bw0gONntNsapOFWQJpfe
JH2rgsc1jgZbJqlCzMornScfFPBOW4ezqamqcGig5Cq5K4fTHC597U9XBdeH
7K9TEVn8Pnagpv1EFaYGjewmqKTw3u9xm5HPVGE+8C33zdMS+PHwk88bi4/4
W7ZUs6ZieFIz/zH5ClXgGZJ/UiYvhA/alzX5VquCLMfoIu0MP85ArOj3sk4V
jOd+LB17w4ebP2nhX2xUhaWz6WuVL3jwh6r6o/zvVGHgnUnC3r3T+Kepkbv2
Harg9vdxwBA5B84WaUvI/qAKrxejJVZaWXArvoWV0X5V4AgJNDdoYcQzW32f
MI6owvPH0yHLB/T4hONfs/NjquDu7xeZ+ocO5ySNobj3RRX4b41c77Ojwi/n
H69tn1QFdaEPBxEoGZ6jnu5BMqsKfsby5qX3iPDvM7xc6KIq1GQv6z6M3Wvg
iX4xcOOXKnj9HlKvat1ocOSXi3rzWxXKM9tW7eJWG/LbGuV+b6qCTltFIjnp
fMMPZ50Fsb2jPEHfL2QPfG8QJB/KdDtQBfvGTerLRiMNrs8uGRaQqEEeYhRz
rbG94bnm7OF3CjUgMuk6ZXC/smFx1qviFO0RDnlX56ES1yAau+NsceIID/7k
8OhMIXgIRrKmMB7hxHHqTJIHhNJ22u4+1iPcRkUcNfFfwy+XhyE0nEcLfIvi
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
jOm61peV+2wfHlpCt4V/rbSsS/3/AC9QcuY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.557663877009577*^9, 3.558093733363462*^9, 
  3.5580941476695642`*^9, 3.558094334557844*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwl031Mk3cQB/CWt3RQhBZ4BErfGQiio3O6IMjvBBcNZU4ENKGZG4WCb3OB
0I0VzJBZUVxneRGbMmCVFR0KvpUh2kHlVQrUYUFgawcT0Awlq5YCZbzscbvk
cvnke/fnsYWf7xc5EAiEaLzfTCLhv4L/BwtUecdmwg8SIDxGX5w5xITCmuWE
uZdEQDeJI9K3mEAwToBW4ggFFRfGVTEMCMrJyE0KdYbZrv6O4aN0mLJdOuD2
iwusc9YkSVQBEDd99GRpFgkEsrgH23posHdKvpHBcIUx2fszFos/zHQICx42
uIFbtaGNFuIPmylP6LGfuMORBe+sQ/v8wBXZUk3WdZD3qfMjyhlf2D2bssBJ
9oQWqppkrl8Po+3pxJQwCmzYUbmqNmLQdLbzEMtGAf6XkapxVwwynMUTBgMV
lEvFTB7PB9Ky85rISi+okp2Os4q84Z3MjYb4VG8YVAzx7lR7wSNqmJs4wgd4
s8a54m4q3G8srAxzxOCDhJPpxmUK5BFD9/WbMZCuDt/YwqGAq0my54RmPcxz
pc0lfE+YrmOX1+T7wrbb2hGdiweUb/Bzakn2g9HGgQVZkjvIlRk9qSx/mNC/
mxXV5gYp5R8byM/9IX5kV9ozniss7lLba1pp4PlFE1lXSILJ6Zjc9qIA2P6e
xCPP4gKXd/BoA6l00J6u6hVFOUODVEzJ3MSAujlvM0/tCEXJaXxHGwNeJ0Uc
sfs4wFaT6qeiASZU7NZet6QTQBFS2TDAZwHcCSorVa2gr3UyBb+FBaTlksja
rUvoQ1qyWh/IBsXbB4frx+bRzhM9Aso5NizKOtniZiuqCRAG9tvYQKL9bapO
sKDAjisVewUc0A18cxHjzyD5pvbQx60cIASbE83UKZRhdRrsDeUClKWOd9X9
hoS3XrPOXeBCwZXEjmZ6PzpemLgcV8IFgoj5Ahr6kDhRM0Iu44KO84Kqj+pD
Z23i7+QVeF5dKDQJ9Kgxwv7PpSr8vvwWkah8iOwP1p7UXcP3T3lAHNaF5I/J
ss4efP9uxVctdC1S1n52+Ewv7i2be/ui7qPaHEPsnj78vrHL9w/BPfQzJl/q
M+C5eq7ZQXkXmVK8DhuHcZfun+djTSh40i/26STusYBnWvp1FK6RMH6cxv0r
X/qnoB5tl/5uFz3H3S0JdFFeRfHBVTf/msGtGRV+hKlR9jEW49Ur3AEhbR30
71F+1Cn7bStuUtEKWalAUvenQzk23PNTkQewi0hxo/b84iLuH3ZmDdK/RZcL
nDLvLeHOXZlNw6ToWoIoJn8Z99Xs4Zf0fKThdNOjV3Hrhqq4jOOo1RpkX1vj
vvlnEi/9fPS/seOwBw==
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAnX5iBjFkiz76zpvk//8fQMTTIExX
IGk/y/cs6rf5H0D/xr6DICB5P50gvu9v8x9AncCNHwUgiT8/cuD63+YfQGw9
dW33H5k/hRUlEcDNH0DT+2iU8B+pPxFcrj2Amx9AB9viJ+0fuT8o6cCWADcf
QKHKn3HrH8k/VgPmSAFuHkCur4nbbC7aPwrKjmQyuhxAZz/Rmexy4z8msIvZ
RCMbQG7lKeO0ruk/pIY1x1KUGUAKIYQn3zjwP3vvPWyQ4xdAjhDLKqFg8z+5
d5pqr08WQGLbVL8DzPY/T5JVIP6ZFEBxxYRibyf6P0idvU5I7BJAsXAMUxhJ
/T+ox3nWc1sRQKF7a+owVwBAvggpK55RD0CCn/xR9OwBQPzABlwXJgxAANPg
QLx6A0AAWj5+hwoJQCZ0ZnhUKgVAtBczD1erBUDk9ZdWC70GQDgU0FLphQJA
SuVqfZJxCEDYalQKtjn+P07kkCseHgpAyG68UYeH9z/qw2KAyK0LQFjwdP7d
SPE/LhHWHUNfDUCQdk8R5wXlPwo/9WHc8w5AYA+s4DnC0D8AAAAAAAAQQAAA
AAAAAAAAhwK8HQ==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
J3uw
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  PlotRange->{{0, 10}, {0, 8}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.557663877009577*^9, 3.558093733363462*^9, 
  3.5580941476695642`*^9, 3.5580943346135798`*^9}]
}, Open  ]],

Cell["\<\
This means that species 1 wins.  This is case 1.\
\>", "Text",
 CellChangeTimes->{{3.5576638922727413`*^9, 3.557663903174342*^9}, 
   3.5580937470150337`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"evaluate", " ", "equilibria", " ", "numerically"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "eq"}]], "Input",
 CellChangeTimes->{{3.3991602443195*^9, 3.399160244492917*^9}, {
  3.39916041895105*^9, 3.399160429103065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{"n2", "\[Rule]", "12"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "10"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5576639172787323`*^9, {3.558094132656763*^9, 3.558094152722474*^9}, 
   3.558094343245511*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"eigenvalues", " ", "for", " ", "eq", " ", "#1"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"j", "/.", 
    RowBox[{"eq", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3991602465022306`*^9, 3.399160267925264*^9}, {
  3.399160407915861*^9, 3.399160415026689*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   FractionBox["1", "5"]}], "}"}]], "Output",
 CellChangeTimes->{3.557663919317672*^9, 3.558094346136619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "r1", ",", " ", "r2", ",", " ", "k1", ",", " ", "k2", ",", " ", 
   "\[Alpha]12", ",", " ", "\[Alpha]21"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"how", " ", "long", " ", "to", " ", "run"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "parameters", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"r1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]12", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]21", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "population", " ", "sizes"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n10", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n20", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"numerically", " ", "solve", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r1", "*", 
          RowBox[{"n1", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n1", "[", "t", "]"}], "/", "k1"}], "-", 
            RowBox[{"\[Alpha]12", "*", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/", "k1"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r2", "*", 
          RowBox[{"n2", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n2", "[", "t", "]"}], "/", "k2"}], "-", 
            RowBox[{"\[Alpha]21", "*", 
             RowBox[{
              RowBox[{"n1", "[", "t", "]"}], "/", "k2"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "n10"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "n20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "n1", " ", 
    RowBox[{"(", "green", ")"}], " ", "and", " ", "n2", " ", 
    RowBox[{"(", "blue", ")"}], " ", "vs", " ", "t"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], ",", 
        RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<n\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "isoclines", " ", "and", " ", "n2", " ", "vs", " ", "n1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isoplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k1", "/", "\[Alpha]12"}], "-", 
        RowBox[{"n1", "/", "\[Alpha]12"}]}], ",", 
       RowBox[{"k2", "-", 
        RowBox[{"\[Alpha]21", "*", "n1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "k1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "[", "t", "]"}], ",", 
         RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"isoplot", ",", "dynplot", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "k1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "k2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n1\>\"", ",", "\"\<n2\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"eigenvalues", " ", "for", " ", "eq", " ", "#1"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.557663729238193*^9, 3.55766374244341*^9}, {
  3.55809377001383*^9, 3.558093787619053*^9}, {3.5580938336253653`*^9, 
  3.558093887019257*^9}, {3.55809400477166*^9, 3.558094055552709*^9}, {
  3.558094109978948*^9, 3.5580941106185083`*^9}, {3.5580943691716843`*^9, 
  3.558094369647492*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxF13c8Ve8fAHB7V7IiEa497+VeM51PQrISkpGiiBAqWSF7VLYkK75FaRmR
jGSHpL5msmVGGRnZv3Pw+v7u6/7zft3P+Xye5/M8zzn38F90MbSlIEM/FNtf
MoHojcfpvFVHj11ophjxDkaK6cQOX7V/hFAdNGh5xROCVHm+fiJqn4uoOrtY
+deFIPX4a3Y09h8Q5NbDmGHBMMSHfevdVkYNElQeYVXXG4YkxmkcXY/8iCi4
noo6mxyONNxr1Vq0+4I4MQ3GIiJ3kNlgpnHP5/8ivIOtifNLdxDfmlyx5Yw2
xDWk/DHz57tIIiy9/hPZhfDo4K3PRkYijcpBJdN2A4hmsaDSan4M8uIIqx8p
dxCZvU215SAfi8z12Dxyez6E3P18/upcRSzid5BueD7jB2J+9XF2RW8cUlti
RimbOoLwfmNkOHE9HmEweyF47cEoInDlxzkHpgTkwQN9u5nIcYS/1rB0/6n7
SL98Rrh0xARyxprr+sDyfUSwcy7navAk4mLxdrMvKxHJY7s/PeU9hQw0i7rt
Y0lCmmJ7rk3YzSBiS/3D8zIpSHhSYmM8YRb5nDA8M0OTikjaI+ZyubMIbzgn
e9BIKnKdNvbW9edziOzjT7aKhekIe5cSE4voPGJMQXCuzn6EvMseTs3PmkcE
n7cQLAwykE0NYsVsxh+EbrKafOhMJpLJ3qcfw7uAVHFTFWT3ZyLqoyEDMqkL
iL3rcv0Dx3+Qu8FdZC4PFpGFDpj0i3uMcNZ4H/8VuYx4xPg20nNmI2VxuPZ7
jH8R6/7vPT112cj5i802khF/kS0BF995z6fIE3LeUMfgFeQinc+eOzPPkBP/
1nMwUqwiNF9oDlu9yUF+Zrg8fX57FRELobPh932OEKCqYdJ7DVm1UGNgxb1E
2vc5mEX8XUMOfOprTN96iXgOsPwUdV9HLG/2jH4efoVU+Nkw2l/bQHJdH1v3
vs9FtN/T6o/ZbSFXwHhBZiwfIWxdXOSY3UL2M9MxffQtQO7xXWjBHSGDlG4Z
gvrBN4jbxdKbxrVkcOBYtHr0xULEntK+0YmOHJCYLtLrvUXIuSfsPCG65LDu
lhxuXFmEqI+51ha1k8O0/5b7OLEYUQzj5WzhpICj/4h/kfpbjEiKNjuOnaOA
Xnelx6+r3iGsDiKsB0YpwPgPvTPOvhQZ/tVn7blICVEnHBws6SqQzqi7RTFK
VGDL1XBug+ID0iSjRJ/jSwVluNyKcopKpOBaQl43NTXQNnxg9tpfhWSzqFHN
n6QGr/1Uf2QfVSHJb2bOMkRRA7eF900jQjUSsKi9pcxBA955SbYnLtUgbol/
DY3MaWC5cMj2HGUtYq+Qne2YTgNMYixMFs9qEQMvcv1UYVog9LbzPSKvR/g2
ilM35OlgZDLFjLTYgLCl286y36KDwZUSm8DKRoQOYVWX/kAHi5/2jA7ENiEz
/s5T50/Qg0LyQKDTiWakgkpIufIsA5ytrXglTP4VKchqjfyWwgCL9+7P6AV8
RbI1/YdmBxhg2UiFVYj6XyQqvCec354RuvTOzapwtiKWTHFdgZ5MULmHXTXU
uR0xeIVIpJQzwbnC2eEnezsQdf1ffm/I9gDv/XOi4m86EMkYLeGR8D1AS3nX
tp6+C1ln3XLTeLgX7DIPi3TPdCOzhS8bLPv2wvxGlvyHou/IyBnzQ+78+yDx
7NbgR/8e5NODoprsnH1wmzzLOE24D/m8R56eypIZ5POGSn+aDSKtOixJLT7M
YC4zcTy6aRD5FvFb+GEqM1hLxTJUqA4hI9RP1aV7mcHiAsGwV2IYWd844G9q
sR/yn6W5rouMIBRHFvbibu0HMm+11I5XIwid99e0X8n74VSN3VEP+VGEdSm8
LPD7fvh5dKZSymAMEf+9svTSjAUsmad/MGdPIHjJzhAPLxYgqL6g7lKbROQd
CtjUHrKA8Itn2nHDk4jamINs1zcWoDu/eX9ZfAox6++5Sm7KCp9rylS/D/xC
wlvej5wxYYMOWya7ul9zSBRT8g0+dzb4yBh7wtx4HknQdqeYus8GC65zDDfK
55FH9dJ8/h1sIC+lnCAR+wd5W/HI4rkxOxxyZ0yI0V1ERl8HtG4ackD6cvFJ
C/oV5Oe0pXXjdQ6gULrw2DBsBZkVV56Nj+MA9pf33Z7TrCLr2fN7xFo5QDPZ
P8yZfg1he3TppNHpA5DxzXhrmncDUYvWqHx6ihNIuav6DjVk4K9dmNPqzAkN
eHo1WUZyqKDGxW9EcgJ7hpTZHSNyUPYhu2zUzAm67if5RkfJQe5KGeOWFhfU
jQZ/491PCYLHCWdN1A6CzN6R4mh/aqBZPvSbinQIKPcX7P1UzgC2Mqt7CHv4
YJ1kyJYFrKDbE5bFycsHn47rq/9xZwViGLsqmQwfJD4UrnV4xQpUA3inLwZ8
YClqm9xykA3+ibJruprAB1Wr5QGyy2ww8Ks99Dk3P0DXUPqVQg4we5m7hRMX
gLN9YfH5kgcBTFUfMKoIgMlQhyfp0kEQpfok/UdHAJITVqZCHh6EvxZjltVX
BSD2Ku2WLzU3JDLylFvlC6Dr2VVt+50b2hzueKYp4sC1IzRvy40HSjk4mUNO
4uBlI8nwSTYP/FOd9dTJHAf5hc41/V08cP1gVaeKDw6O57Tx0ivxAnPTMvH7
Bxzw5LVGji3ygp6Y7RzHCUGInBKfbZfgg9W7N8v6TAShiZ9jwxzhg2e/Q0Ke
XBaEYK1HJx8b8gFVYTaXbKggePuVhnp68kHp0YljenWCcG3swIZYFR/YZ/5l
ZOsQhLUI1n+LWvmAnYq+8/uIINRNNyyRjfCBa6OYgz2VEGjwdTm0U/ODsLFj
XNBxIYg5lMXurMkP7W9vndM2EoIvKwtlc2f4IYDrnvD+S0LQsaDtTbTlh97+
l6XpgUIQ+HrfwHIgP8Rf+T1cUiUE+RLNHj5l/EB2+5rcLCIMvC+92j7xCcDr
oYCNt6eEoTdXUs1WUgAs1OM++l4QhrJHZDM1CgLwlv6NBeNtYbgU5n+jTU8A
nBIWgoQrhCF3DY/X8xCAg8tU+r8+C8N93zcOAgEC8NGMnbOwTxgWBw+IVd8R
AIHD8i+PbQhDcEsijU2aAHTneLSfOyICtFSRwxqVAhDKFJ6O0xUBg0rRrKAG
ASC6JNn/tBCBKw9/dMZ+FYAYYsm6xy0RaMjlTRAYFADND6uC8aUiMJbqNyi+
IQAL/IwzZk0ikGb8x5+cCgeZwdwlfN9FYDB989VrBhysnzyi93oFrafvnh99
AAcF7b43GxVFYda22TpABgfPQmwuDp8UBVEm9tNJJByky+ucWjMXBZ8YybQQ
FRzcSeIUk/IVBVpx/qUxTRxcOvemN6ZKFOyMyDz7LHBgvie5MadVFEwvntWp
tMKBQYX/2+ofohCnoe3tb4uDI3z6MQvUYnAmXfxIqjMO2EYmjptqi4GVAcW9
s7dxwHD/C/6ahRhwXw/MUQnCAZnmW547TmLg0RV/njIMB9NPg5bLosRgS0TL
AaJwUOfI++Jwmxj8E+l4IzgFB+WHqJMUR8TgYyLju6R0dH6fp4JPL4rBqUm/
lfuZ6HxkSs4HHRAHJ1vHDr2nOHD/Y8QybiEO41tXLWryceD0RHlry0kcwi0C
e2QKcXDxDP80p584NItdGop4iwP94t912hniwBcQEEpXhgN1+46CS/niQGXi
ySP9HgfKXOWPfKrFYe8+N8Jx9NyI3Irwej0iDqm4pXzVGhzwSrpe/rgoDvtu
HNzE1aHz7zMxGqSRAJdR/ui1enS+iKAUi5gEZNZmk/ybcPCN4sPgzasSsJLF
lf3zKw5a3mR9jvKTAJa73RaXW3FQa3Ov9Gm0BLCN51ztbEPPcb1ZQne+BATl
PlxM6ETX0wMC5qslwN40n3WkC52/qIgzY7sE1Et79ol2o+t5Z+GE6hIaP2id
ndCDA3+VHqIJrSRw9+UolPei/Zmu4nfhlITbx4LSvveh/dCPXstQloRX+qHU
GwM4UGERz6W6LQm2FkwWAz/Q8ZGbN36OloR48fzSyhEcWM1F/EjMkIRyM3qp
lFEcBH+dRA+CJFBcTuc8Mo4Djkou2flWSVifVV2hmMBBTu5J3bIfkmCQByU1
qFuicvz1qKXAA699V+4nms+vO5mDQwrsnlovDaOev0pfNCAsBWfKY/7cm8LB
Ab0rk9e0pED9eo7ev9NoPKOYYeJdKTB1N3l3eAaNXzV1upAqBV0eWXTPUAf/
DA8VfSUF+1RMuSRn0fqNE6WlLVLAEvxsS2QO3a8lnB1BA1Kg5FbHkYG65ZnW
jO6sFFhRmzizzaP5wp7hBvZLQ9rt0VPzqIM9vqk+E5AGv4+OLOf+oPOzozO9
JicNY25qodWoVTTt71GekYYU0BkPWUDjqUQXRZKkgQPfJzu5iMYvnN0390wa
yP4VFFNZQtfvR5hYaYk0COJZ7t5B/bl63FK3Rxr0DN+O8C+j8ys44Mk+LQ15
h25SOaCezzwR178uDX11tv25qDkCnta78sqAjVoBLekvms+1a1BJRgZKzt70
dkOtYkW7RgEysOx84lc+aivETua+tQxUdC/uE1lB+7EhnFTyRAbmTZh/raE+
8sukILBIBrjKbcikVtF+9IY269Sj8aNxIedQz5eNkfWPywBTbCxnMeqQFxzc
T//KgFNfxdFh1Pf0Hh98R4WHiYnnNExr6HlQbSMGsOPBNvWfbAvU48SpqlEe
PFAuHE4IQJ0nSXlKWxgPuUKU+tmo1Q7JXWFVwMOxqQmdadR2a3FpWaZ4uELi
dHRcx0GC/nSNlxUerAIy60NRV2Zq/NSzx8PK2fnTmag5tf7KL3ngoSpbl7kd
tXrKacum23hYPxB6ahq16+/nQelheHjdENFJuYGDhgTLr5oP8JC3ceMrHvXC
+Nulg4/wYMh8V08TNZ8KM89MNh6OinQLW6D2HKq+8uAtHnRlSRRBqMWkRSkn
OvBwOgX37RNqk4AAsfI+PKx9/6e4F3Vg+/dTMaN4CF4o4fiF+rt3ZKriIh4y
0zatmTZxQNMyVs20gQf99/xnuFHL8sPkIBUBmrgmO8RQ3/k4T4pgI4B1zqko
DdRvD+qeszxEgG9Vfc2GqIevZgUSBAkwdjww+wJqZTbTL91yBPCk5pH3RD1l
9d5e3IgA9xc42bJQcxZyRG+ao/FspZ65qNVpXYtaL6JvVYZkUSWoU18JUNy6
ToCrtNptzagbyHxET3kToJW9iLYT9YJRhz4ukAD65AmL/ah1V8NSPsUSgEXI
h2YWtafeUNWjhwT0eVku9Rf1kwzliRuZBFgyfsRBtoU+nzR/EQ/lE0CZUpu4
D/WreMMWp68E2Mt65Ks46u9jLxbgGwHG+0+QCKhplKm52QcJkAVnriigPj9Y
bPd+hgCNCdTqx1HfkdsfFbtMgJe/XX9poX4b6lBou0UAp1fOjvqo90rxkO/d
Jwu9Hv/8NEWt7O8uMswhC8ug/9sS9eW2L3pveWXBTjPg00XUFV6ByeelZYFt
eoLDCbVL/bhcrp4s1LvGM/uiroSXjpImsiDn4mkYgJq5zPVxznlZSG2bcw1B
nZe7wvLERRbKs7i1IlGTiVdo83vKAu8WHWUs6tNPAgPT/WXBxJPqUQLq+STG
+aRYWXBXEPJLQa3G+lWMI1kWAhZZatJRx0cmWMf/Iws1N2qmM1ETA3n+jXwj
C/HE1bmnqN0dZfICO2RBqCmspwB1/eif8a0+WYi05jhfhPqA1bvDvmOyIDz0
7lMx6nfGx6I9lmWBxYDRsRw13RfqjwtbssBzki+9ArXpyabNa3RyUIhfrKhE
vaJq5OzEJQeHcrY+1aLWfncge5JfDt4+0yipR50s29t3WVwOXN2cEhuw/orY
6lmryKHva74Czah9mD0kTSzloIzOPaYVdfMdFZs2Wzno8wfGdtQ81GSpBs5y
YM/+zqsD6/9KOKPObTl4KC0u9w1bPze94w1hcpDnP+zXjfrC7/23NGLkgPlO
zYfvWH9/JP9EMuUgyvKWQB9qA8sLAu9z5IB7cZ9GP+rMLpy5cgFa30/r/ADW
3+aXjcQaOZAeq7g5hDqoqOKZ2KgcGCZ0IqOo22WCBrN/yYH4vl7eMdSCz09w
Ci7JAfnzpCXMtelfw3hpieB4A4mdQM3Gdf9Dyj4imCm8Mp5EbRtvtszJSQTz
S437f2L7N3z4MqsYEXzsK7ymUJtQPE2PIRAhhX9BcBr1Ux/Hzj3KROBAopsw
a11b0KDTIQK/XS71b2x/m9MIbTih8WQvYBb1UTzT0qQbEaZue5ZhnqNm+djp
Q4Q/Gndl57D1y+e5knePCC/PTLLPo2YMwymnJRDR/632gZgrzokx3kklQmVU
4hRmITrSq0sviSBpYFP4B/W3PmU/g0IiFPyryLaA+t4bOKVaToRff3HXMM+f
153jaCZCgH6WwCJ2HooukZqmiNCad/PyEmq3u1doiv8QAXfRKB+ziLVL1+M1
IrpPxlYwRzHd8vJlJIGaqFvwMupjw/7aDqwk4G6Mr8e8UBzKfZabBLb++TR/
UVtcinuPlyABc6BUAOa9SklRPHIk2FOdXYa5em/6BQYVEjzYY7qAWbQ0h3xE
mwRD3+5braBeYq7SeOBAAqWyH0KrqJ+P1XMEXydBRGugEWbL8uZxV28ShHBW
3sZca/ctQvsOCZRT1dsxe6j2myvEkSDMJm0dszjriIRgMgmsHMtwa6hjK2Y+
b+SQoC3OwRmzesJi+s98Ety6uCcO898ray5dJSRobkkqxHyenZYlv5EEwT33
ljBLOvGa2EyS4OGlPud11IPHBEVOz5HAb7rgDub4A+J/VVdIMEqVm4V5tZqU
fIBeHuoy5boxv05ScaTaLw80IQ1zmK2djx2Z45QHk6JU+g3UDVx6/U2i8lBc
yq2A2WfGMLcYLw/Rv1t1McvUmfo/UZQHaqlha8yJrjYCflryIGHGcwfzpY+3
LhPs5YHL3KsNs80RYf0lFzT/FtcI5sv5X0llHvLg7KW8gNk+RYhaI0webn1i
YN1E7cD8dZo+Wh4446v5MTuGeLe3JMpD314GPGZnly+PTbPlQYbCVAez64jX
XZ7X8kBhe9kU8zUzwRvDRfIQF8Zqi9ntuJeaU508VFAa+WL2PoAbuj0iD2ek
snIw+9z73KA+LQ8M9BNvMPuSe+bRL8jDXq+e95j9p5pvx1MqQMpG71fMgVYe
dqaMCjAdMtONOaiD/xQPqwLw3ykbxhz6wZ33qYACBOtG/MEcTuSncRJXANP9
sWuYI3I+/cLLKkA/8RzlFnZe4vnelx5TALigxoI5zq7JosVKAUiF7lKYE3rd
jsfbK4D9UJUc5vunD0uYuipA61qPEuYkFbfVodsKEPUhUANzch7vcHaYAgTo
suhgThFqbHSMVoDfke4GmNP38T5cTFcAa5k6c8wZwQ3+pdkKMOZacAFz5sp1
+9uvFUD/pLcN5ic/PirQVygAdWbaVczPi691HupTgA/c+n6YX0oeqhgaUYA9
6hKBmF9l1mdlTytAycefIZjz7nLfxK8rgGMNWyTmArL6c4uUiqAvGxCD+c1N
V/VSRkWoJLXHY357oY5VnVsR4r/ikzG/a3dZo8MpglOoShrmkpMHf3wWV4RB
kMnAXC7nUnBWWRGCydqzMFfRcp12NFMEzTMCeZjHHktrd1srQu2P4gLMTKB+
/ISDItgWKxRhNvV0IeFuKcJRiZUSzH5sIdKxQYogc/NI+fb885JFtu4qguNv
pwrMMxN1XD2pinA59kE1ZraQHpaTWYrg3hxXi1mZf46x+JUiug996zGHmh3a
jKtQhOa7Ak2YeZquD2sPKoK3evlXzGqXw3veTaD9ID/WitmeIr1deE4RTp0p
acNcqNxYT0GhBMWJoZ2Yv3f2f3BlUAKjmJ4uzGQ3Ft71syjBBW6hbsw6Lw6/
KMUpQWv0gx7MridIT0QlleC4flUv5sQf2mmJRCWQ0xrqwzzM7R59XUMJniRR
D2L2utd8Q9xOCY4ZTv3Y3i+iw05JLkogGt86grm2dtmWxlMJ8i+9GcXMvCFg
OhyuBF9mL45jln+oeNogVgn6W/ATmM+R9LUrHipB1O/lbT+96nUk+bkSCLVc
/4m5mT6aRPdGCd6tCU9hns96Iu1eho5Xs2PbR/u/8Bk2K8H9Pfy/MHfoC1Mz
/FaCOJtbM5hXf6pseiwpgZoXzSxmvrDTy6ObSvDQOnLbTh98Jqv2KUPIpei5
7fNlETcsw6kM34gM89v7a/lpTxqfMtD0+W+bEt/22YugDNNyF/9gFm2eqB9X
UoYM3Odt69tvfjijpgyiTsSF7fOWIVZAMFKGVxF/t03Y75846aYMRsHmS9vr
SyZd9iRYGW7Qz27beKZn4EKCMlyp9VnG7P5ZQazzDTo+G/+/mMPLR/Via5RB
vXF52w9fxF/XbVOGLyr2K9v7PWKmrHpeGU5qE1cxD9jpUCuxqMBc9Mi2KTSf
6ucSVGCpxnsNs5AgZZLQaRV47U+2jlmL4sJQiqsKvD3use2oCg638FwVeNOL
3u5Rt3u30Nz8rQLnT37a9kGF0IfWUkfgXuixTcxWf1Ql9Z2OAE9W2rbJGgOe
CPiqAutywNb2/SO97tBy5FG4SmrbNtX5tCstDxFgHJrf9pso5Z5WQ4CfG0xk
ZGSCkCBYzv7uC0BlPte23UpVDdJ0jwHdDPO2k6uvZbK2HwNEi2HbH5qy5iMs
1ODC8z3bZouY6VrpVgNjyp18V04ovb9iehx6X1Ftm8KTVOIwdBz+ZaLcduoz
QpGjgzpo0u+Yo8WD+/esOhxeJdt27J/3Aa4eGrDpvLU93iNfuHymFzSAOXtz
22PPb7rbX9cElfM77vgbFHZzVROYfXdcqxmXFBh4AjRHdzys/VY1glwL2mx2
8pGf+j4c7a8FqQM7JtPSmj+woQWWcjv1yY69Jc/wOglWx3es/rJTpIRMG8L3
7zj8wLJea5g25MzsXL+uKEU3Sq0DjLv5XM0vVS8H6cBg945Ff+vEpzDpQkPf
jocCiDbIfV2YGt+xN4PdIxtuPdBd2DFb/MPvEZl6ELS1475/h3Ke8epDI/VO
/Wxmca+PKfrAuuvCKsELHrhT8IRsx1XXD2uIvDgFfzd2rt+afnBhgs0A6td3
nM6XcUjV2ACidv1a/3OUYZwBUO/Gv/dZJbP/agDju5754b9Zx3oaGHbHw69D
u447exrod+s5RCbVbN4/DVG7Lvwidre7/TQ47JpPh61/ndMQaHd9r34Tz2dp
CM27+Zh5FvQqUw2hcNfxNyYdrHoNIX/X4bWUqlUHjeD9rn3YefcJmBlB267j
HsU6fUo1gl+7zhGjbnIbNALK3XrfooLmkg8bw95d0yyQc1WdNwa6XZvEdX+S
eWwMZLt+is/3Sx83hrXdfPaNr8Y+i5+BlV2LXXyuv3H1/6bozPfPefl/95ws
KTgzdea/6zuXuFy1ZUxgfdetj72lkBsmsLHrUYmxwryC///+983pIwLzJv9d
7yM/7GmMPwuru956d70o1Pn/znI750tecPa/eB28pobP4tn/8tF/VO66QTT9
r95HS5krjjdMYXPXyrQGeUUl//frPFf0vmgKW7v+H4dF+EM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.558093897066481*^9, 3.5580940062054653`*^9, 3.558094056322658*^9, {
   3.558094097942881*^9, 3.55809411132043*^9}, 3.558094281525696*^9, 
   3.5580943715285997`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwl1Hs01AkUB/DBlGlohqmGwZi0iqQSRVHdG22K6UG1aleRFE0lWlR7ajLW
RA/RJj1Qk0crjhktM0dLNZtZuznTy2Ol1W/KTvIeyjTIY3979o977vmce7/n
/ncdIo4E7zOmUCgbyfqvB+zrfKnsEq++yjPTT04ykepnE6vhRELVmKXq5DgT
PW5dy63gxMOrVuvLI6NMDHza8kseJwU4WfOWfNIzMSTS8OAnThbk0nwPd/Qw
8c3iVL90TiFIBo+/V7cwUTJr85lznEooqe1ovi5joohW4XSWo4KaqMcKjzAm
7th5WzYw2ASC7in6t+UMNJsUhfrba4D51uucLYOBc4P6O2vPa+HvZe3JqTHT
8dizFXBtqAuW1FkPH/rNHK0qLQkjIx2cerJKpeGZo6LdT/185UcINtWZq2PN
8LEgz3Zn7xBsKbK+36Wio37eKmbZYQP4KdxqshzpaDxSamE7dxSURs0+9xOn
oedkuGKrdAzclVGsg000VKcsfVbnMglPiaP8TctoyMvsGbnbT8EBL7pJaZop
9hg0RLObMdKpmRZXPkzFwu7qesZFE5TS828ML5+KDO7POq2WiifiXNPS06fg
hQPy/RLHqegdWKSW9VHxM5Zqo0+bojisJD0QqRjvrqpk19KwriOvKP6mCWqk
qvMvHeiYWcz1ttIZ4xdBU878H8wwuX6We4+vMS5YYzqxv9ocBWFjSfx8I/TP
d4i6Z8XAtkVH+E5DFDzGDZvzLpSJa+NexGQEUdC1d7tZy0YLLHba1hUUOQkz
mAM01agFvn7H6z9GnwDqoxzZV7mWOCz6U1L1xxgcXFrdOi2QhS5Xz/J7D3yB
0g0RkoefWVhyyOdRMmsU9D02Fh3ZM5DtXK/xaBgG+VZ/k6y1MzF7R9xIS6IB
Tq8X36rsmInGR/TKbPfP4PAm4FWBeBY+/FqwuWpoCLy9UrI47my8cMnwlzrn
E4TaPx8xamTj+to95mM7P4K+Pr09VmSFbIHW2358AK5Rd8cHO1qjpC91kSJG
BzMIeb6xyhorU50T9LpemHJKtG1FHAd7zUbLbHy6gXJ3t6ydZYOUULFvQuUH
OHpDls56bIPLs9c8kRu08GBBGs0yxhbNgzRvqv3bwTLgqGsyww6Pyw7n9p/X
QNvCF40nauxw9iXhniV2r6H8Jjhqd3MxiW5CELRm2CXztOROcNFaHJBoxXwB
SeLborYSe6QUf3jvFfw7lHVycxh8HoZ3++a6ChWQlicOJzbxkLKZr/NwVEBk
cN9caRAPkyq2+/rUy8GupqZ8Ywjpk9GdG9hyOJfxXd2FCB4qGReXRkkrINrz
+iD9BJn3aFXfJsphTsrM9aZ3yH0DMbpQeAcmlp+c3lJMWjkoWVlfBK19/zTc
KSXzZ6n+gewiyAyp2LXuHpm3c7kcLS2ASZfg78U1PERMWFBASKDtZcZNk0Zy
zrKqchNmQ9UZw97GZtKFK6mb2FcgyydsfsEr0p4RWw5KL0Ng0aJKX4K8921Z
ZxGRCb8ef/pE1EXO16W6ewrPQPbCZRlBvaQFDfWx0h8hrj13m4OOdAZ3bymR
BM78QxrlEOnyKKc1wkSgGjUVZhpID4+HKIhYeCv3EYSPkk5ytgwR7ocaQcFi
t3HSs0u0ycJv4P+/RZpCaVB2Jaz+FzAOLNk=
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwV1Ps3lAkAh/F3GJdMGHfvmPE2hnRRORWJ3d4v45RFNrrImpCkok3kHKW2
aA0q4pRKF3KrxGYqg8p0WU1OF0rRqpYhK5vrqAwRZtsfnvP5Dx5+eEzAVg2C
IFZ/73+9t358+aBXvKIhSzyhVgvAFHJ2d5ARtGhaN/zetABLLuZeqCTj6YGd
GU8OTAng09h6M49MofW9T+aOTwgQGDF29wSZQ/sxC52/qARoX5QmzCRL6Ka9
sriefgEKzH5OPUpK6debv/Q1tAqQrFtpf4SU04olm/8+KxFgY1ChZPhTC+2k
Opy4e6MALHWyaJV1B607bPVIX0cAO/+hjw+PddNDnNg/hTU2SHi+nM4d6aXJ
LTMPVIfZwEJqpGAwlPT9busupaENqruEDS9++Exf/T1BO/IWH3VReVZBAyN0
aUBGW3w4H6rZPxpe+3WM5gdbhngb86ExXs62spugO5P68kS1s+CsDqteWzFJ
k51LjjhFzUJDytLn9fPUdGTM8tlXOLNAZfePXx0iMLxMT7M8nUL/WIfitaMG
9JjZ7FP/WqOkr/apwXFNVOgVnfvqYg0D3hVldzcT+2Id0jMzecjYURVZYKsN
V59LDZJBLkZR3r39kA7EoWWZPuAifrFcav5QF/U9eZfi863QUSE/9pKvh+xS
nquFkoNvUS3n5yaycPip2eJ+Dw7mu+tMR9bORFToZJJvEYlVRfxtNywM0LYw
xtd+xBIJvFCb9yJDeMY27cryt4TDwHpW62o2WkzKRubctICJ4bCufIKNwWHD
MTctCzDvn5cILhhhEhFr2raYI3pp7dsZPsY49cxz9qjUDOU/hRfcGzXG+uq8
UPcZZlD1c9g9p03AMv2gJHeYomrtKs0cT1P4/HFrMrrWBIe8xBelPaZIrkkM
8yFNwG/3flMsNkOHTZW9KNEYrstScsjF5qh/vD+6p9EIIusX44xmc5S8d9Se
djCC6mlm1+5kC7Cc4nhZB9nIZYbEB9haomlUaBFcYwgTRVWRhtwS74Q5dyYS
DKD1W/K65bEkRrWmNmTy9EFcDZF0GXNAVHgUur5jIe6cJNO4jgPus4Lud/v1
cHd+uq7RLiukliqH2gUzYOQd53DYgAtFtNWVb106aFvQ1LxPxoVXSejGmWna
uJ5P23aH8FBQl1SzzEMLmyTORrxpHlYWnmh/pMlEkrgwua3MGoRKNrmyTAPX
PvLOG/hSuLxQ/qRrGwPpeeIwhR+FYfnICmE4AxEBg3YV/hRcgu2kxSIGuDLZ
9dWBFB6npeZH+DNwNCu4PiOcwkCn154eVwa2O5/9pLePguPJRm6fPgM2KaZe
OpcpyMb+ivlUSWDa5YB+aykF5nGdD/4VBN4O/vPqcjkFP1uXX26WEsgOrNy0
8gaFzjVnPffkEVDPC9gjllHQKAsmVakE2l5m5Ws2U/ASddZ9DSJwK3VsS/Nr
Ctmf2S5B6wjkuIXOLX5D4U26+7XbfgR8Li2UeigoRFUVnUkUErizt/FJci+F
DIOtOycdCJxe4JTlP0ChpeTUe5E9gdiuC+v4SgrWbvUb7vIJzPHd2fFghML1
bfbuB80JMBktJdljFL5OBVYr2AQ6q9yiwiYoICd9Ps0iIIsqXuQ4RSF93u2C
i1oEzlAslVpN4dWDXrPvO8N/M1kXXQ==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
uMbqhrME0/22h/z910aWzJdw6B/YtQ3/F/x5W64=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  PlotRange->{{0, 8}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.558093897066481*^9, 3.5580940062054653`*^9, 3.558094056322658*^9, {
   3.558094097942881*^9, 3.55809411132043*^9}, 3.558094281525696*^9, 
   3.5580943715854063`*^9}]
}, Open  ]],

Cell["\<\
This is case 2.  Species 2 wins.\
\>", "Text",
 CellChangeTimes->{{3.558094405760695*^9, 3.558094409662549*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "12"}], ",", 
     RowBox[{"n2", "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "8"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.558093897066481*^9, 3.5580940062054653`*^9, 3.558094056322658*^9, {
   3.558094097942881*^9, 3.55809411132043*^9}, 3.558094281525696*^9, 
   3.558094371588189*^9}],

Cell["\<\
These are the equilibrium points and below Eigen values\
\>", "Text",
 CellChangeTimes->{{3.5580946855152807`*^9, 3.558094697053609*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "2"]}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.558093897066481*^9, 3.5580940062054653`*^9, 3.558094056322658*^9, {
   3.558094097942881*^9, 3.55809411132043*^9}, 3.558094281525696*^9, 
   3.558094371590561*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "r1", ",", " ", "r2", ",", " ", "k1", ",", " ", "k2", ",", " ", 
   "\[Alpha]12", ",", " ", "\[Alpha]21"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"how", " ", "long", " ", "to", " ", "run"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "parameters", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"r1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]12", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]21", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "population", " ", "sizes"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n10", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n20", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"numerically", " ", "solve", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r1", "*", 
          RowBox[{"n1", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n1", "[", "t", "]"}], "/", "k1"}], "-", 
            RowBox[{"\[Alpha]12", "*", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/", "k1"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r2", "*", 
          RowBox[{"n2", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n2", "[", "t", "]"}], "/", "k2"}], "-", 
            RowBox[{"\[Alpha]21", "*", 
             RowBox[{
              RowBox[{"n1", "[", "t", "]"}], "/", "k2"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "n10"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "n20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "n1", " ", 
    RowBox[{"(", "green", ")"}], " ", "and", " ", "n2", " ", 
    RowBox[{"(", "blue", ")"}], " ", "vs", " ", "t"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], ",", 
        RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<n\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "isoclines", " ", "and", " ", "n2", " ", "vs", " ", "n1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isoplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k1", "/", "\[Alpha]12"}], "-", 
        RowBox[{"n1", "/", "\[Alpha]12"}]}], ",", 
       RowBox[{"k2", "-", 
        RowBox[{"\[Alpha]21", "*", "n1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "k1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "[", "t", "]"}], ",", 
         RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"isoplot", ",", "dynplot", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "k1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "k2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n1\>\"", ",", "\"\<n2\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"eigenvalues", " ", "for", " ", "eq", " ", "#1"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.5576638150123663`*^9, {3.5580944512488327`*^9, 3.558094453173768*^9}, {
   3.5580945602335567`*^9, 3.558094573382773*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
bEbQEv4fvOOzvw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
x1/L5lD4JLSf8P8AhjruUA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5580945743033123`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwlzA9Qk3UYB/B3f+DFBSI5p5dCoLAUuCNMy0n4/MKizmuIRgyxaAMELBpD
QoGBYjgIdDBYVJM/YyS2nSMJLgovciscu7J1XhZo8EpLM0YdbAy3Meb6dT53
zz33eb73PFG5JQeP0AmCeA73//NRLcCjuQZxQ4P4FR0LcHvBNdiQH4qGJbWX
mtV22NdyKqNUuBrdjFGSB9ocEH+72P35uyEouu6XrW+qFmGqOn6ityAY8dLv
7FB3OGH8cuSPwvzH0LREtkd+bgm2tFQZj5Wx0CDvUMi11geQZrro2C1ehTiZ
47e0MhfYdLu4gqogBFai9bv33GAM94uTz5JIxSkK4VZ4oHD2Y8ethkD0fvfR
hp1vL8NJ0UcVP7QHoC7LJ6ZmiRfyEgt5pS1MVCNWLoQfW4G61uJQq5yB5kRb
NxzK9cG67on7F7vo6KzPxqQKHkI5fZ03SkVDV/55eX51th9S1369xt5HoN9i
dll3RxNIW/TkCXaJH4q25SUo8V6YXZYydNQHxszD0hciaGjlQtvjy/VeeCbL
pmNraGiHOjOrX+qB4rrUieSNdJTuuNcbpHTBBwVByzQlHc0coda7h5ZgNFzk
t7EZKLhRSs/QL8LIw3pGbDMDbQq4axeM28EytNcmD2Mihcjaryibh2uRBaZz
bUw06bFcV70zB2e+el3zBysAzew9uOTQ3oc3Nk/lHJYHoMh/I1bFtP8J3uGE
jXFkIEpXMPlp8jtQzZi93n4yECFzSeKnnEngRPNEMQSJUM3vk695f4YT4kwn
q5JEkYnbyzWUATY9m2/mSklU+3zlIrfDAAZfaWdKDYmIVwyleoEBWHL5i1Wn
cT7aOSXWXIXuS2MfzjZib/jVcl42Cqa/t+80n8e2vDTk4I8AOy/0uOwbfJ/0
VHUvNQAjseH7NN+SyHDgy4p+wQDkOGIjRg04v1Fvk2gug/Z0qsk5hh1/dapT
1g9JPTWc/J/wP2uC0cnXQe703HAKhfP9YU0XqB4g+zxNOTPYnuzAco0a9MXk
W1VW7Aylu0fWBQ+8m8nBv7BZzGk3XwVNT2QLouaxj9/r01IKSLAWxiXbsXuT
ntbJ5HBTV+7PWsTO0rNpaY0QwWv9TOHCHpNPD1C18D2hluo92M6VurC0Sigy
6/ebvdhC6lUjJYFgxZUtd33YPafirJQQvhCYXX4/NkF0p5fU7vkPgSOMPQ==

      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwllHs01HkYxgfDdwyayE6bcFIaYotTW0h636gkK5cKXda6ZwtjKRURamRn
zaxbe5IideS6Wztiop0kt1FRLUdrN0RULrt+4zrjuvbsH895/v0853POY+TP
9QhSptFoLkv5r+XO4TfduBE7f/WSTi8usjA50MT0JecA8OO0Mg0WWNjyT/9J
AccH/O94bLKdYyFV7pAaygmHFaNvA6PlLExij+sf58TDmWTZ6xGKhc+b9g8c
5AjBukKvrLOXhdxb0c2unFyo0QnzLa9jYW1q6iMXzi/Q0qLdHHyFhapqkWTw
ZA284taLi+gsdLrox6vwbAKNT8WFWfxlKD4f1FXwuhWCijbcHtBZhp1HT1lE
nm2Dgiydau10LdR2FATX4hsw9NrU9nGlFi5vDxJZHfsL4veUq2dnaeK6NaHF
PP8emIv9ff+9FZpo3RX2fFdGL4hSjAXcHA2snUn4qj3nPbjV9owwV2lgSI1U
+jhpADivWlzc8piYHVCo95nvR9Az8ayaMWHiRu/eqYWgQZgsdrRPuKuO3eOu
reg0DAyV0Bf3NqrjWM8qS/bhv4GeooiqLmFgWmnMCS+vUdA/bMQxM2Mgh8Vw
OZdDQZg8ttNBRLAyIqFUmCeDgiYosbYk2L4+k7hnjAE7bNuFN5VqaHypzfTr
7HEI3/nTKfctamjj1vNlXs4E9HulBVmKVLErgrdTkDoJGY4S3yobVRTZHNFq
SJ8Ck4CD5w3EdGR7NnUW8aZh8pB+prkdHaGPlv70tBzeCS+KcxtUMJsdosU5
p4AHE86KEQcVTMr99srWkzNQY+m8Y+CZMt5svdYojJgF0bXyGw8dlTEuPJMy
iJyDp/sqiaxRCYf9TD8/4j8PzJfDUW0HlPCH+SF6d/ACbE/kz6e9oGH1iOPo
sqOLcEf9eIrcg4Yd6637thvT8NCDH2354kUI2RBgkVlAQ8ufbfI7HyxAreex
2F2GShjv4aQeVzcPW7yHinXzlfC6q3lZh2QOQi/tfWO3WhlNFZHul5tnISWY
MaOUqYzU5lGNuc4ZkBj4LQ7pqmByvZ2SWYcCqhaSVcyEKihUHpOXvpdDa7nD
kECbjoHXzpn3v52GhjXBjakZdIx+vCXqw59TcFl8OL+XqYrytEOSHUOTcHzt
W59jAlXc98jR3mlgAmYrLVabEzVkZtxqLpaNwwWVwRdX49WQodgY3K48Dmxj
G7/1tCWPYoFdxaIMzoZ7TjDPE9RZd3DlkJYM9LcFSjmxBKWZVlyRugyezH93
wz6OYAJdvylGVQZMgWB3TCLBkYH+aI15CnJL67MGvydYXxTd8cUIBY2fNm+V
Xid4etP1q9xnFOgGsKJ5vxH8w6Z3xWQyBVVmBvvzHxMUljSckiRR4DNmZih5
QnD36pI6XjwFRYl7GyfqCd6fi4xiR1NgeyuOHdhCkF9Db7MKosC/a7jSvpvg
jj2mGTEOFJACBd/nHcGxCs0he6CgLJR8E9NHsIgj26VhS8HU7Foi+kBQl1Et
y9lMAV/vqJfR6BL/M2d3iREFFn0nzO1kBG/bWhbzDChoLz6z6D1O0LtMV+nA
KgoMbdIL06aX9gm67ncvp6COlhdbpiAYs1DLKNSkIERa5iqdJWjJvevLZVCg
mVa9rn+e4Kce/kMrOgX//xbBXDfuchqNgn8Bhls7SQ==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
SWSF+WgZkQ9dSxwQ+b8VftKb
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  PlotRange->{{0, 3}, {0, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.558094574313401*^9}]
}, Open  ]],

Cell["\<\
They coexist.  Awesome.  This is case 3.\
\>", "Text",
 CellChangeTimes->{{3.558094599667303*^9, 3.5580946078006897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "2.`"}], ",", 
     RowBox[{"n2", "\[Rule]", "2.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "3"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.558094574322884*^9}],

Cell["\<\
These are the equilibrium points and below Eigen values\
\>", "Text",
 CellChangeTimes->{{3.5580946265624857`*^9, 3.558094660295352*^9}, 
   3.558094714080534*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`"}], ",", "0.33333333333333337`"}], "}"}]], "Output",
 CellChangeTimes->{3.558094574324692*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "100"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"how", " ", "long", " ", "to", " ", "run"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "parameters", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]12", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]21", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "population", " ", "sizes"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n10", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n20", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"numerically", " ", "solve", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r1", "*", 
          RowBox[{"n1", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n1", "[", "t", "]"}], "/", "k1"}], "-", 
            RowBox[{"\[Alpha]12", "*", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/", "k1"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r2", "*", 
          RowBox[{"n2", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n2", "[", "t", "]"}], "/", "k2"}], "-", 
            RowBox[{"\[Alpha]21", "*", 
             RowBox[{
              RowBox[{"n1", "[", "t", "]"}], "/", "k2"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "n10"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "n20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "n1", " ", 
    RowBox[{"(", "green", ")"}], " ", "and", " ", "n2", " ", 
    RowBox[{"(", "blue", ")"}], " ", "vs", " ", "t"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], ",", 
        RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<n\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "isoclines", " ", "and", " ", "n2", " ", "vs", " ", "n1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isoplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k1", "/", "\[Alpha]12"}], "-", 
        RowBox[{"n1", "/", "\[Alpha]12"}]}], ",", 
       RowBox[{"k2", "-", 
        RowBox[{"\[Alpha]21", "*", "n1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "k1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "[", "t", "]"}], ",", 
         RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"isoplot", ",", "dynplot", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "k1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "k2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n1\>\"", ",", "\"\<n2\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"eigenvalues", " ", "for", " ", "eq", " ", "#1"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.5576638210522327`*^9, {3.558094773760921*^9, 3.558094778497814*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJwt2Xc81e8XAHDzXiH1lb2y9977c8xkpQiJSApRJCqFSCEihVJKKhQhFIns
LStkFDIyypY9f8+H3z/3vt6v17nnPM/nnOd53fu6PI4ex86SkZCQsKMX/J33
/ubrRK5yzfTq4c3h67HYJyqRgxdcXmABi6wSgRxxWPm1rGRhl/dYhqzqLFVl
HFYjfcmZ4FKKFYekxl4/+BjzY9wu2E6qxCSoE8Vyvz/GHj3U09yIrMVMWovm
Lj+Ix+rutRksOrdgBpTsecD2FJu9TTt2Lf0bJrO9xfJ67CnmX/leZDmpHVtR
NUzDihKwR7CU9S+yC5MxqtIe9nmO1asGf550/oUpREoPC7xIwt6pHwhQeD+A
RQ0GTXrzvMTmfjq98E4fxOIyVDrev3mJBbBRDc0nDWPZNT+v25e9wqo+nyCX
ffYb26ND5r3P/DVGfeId/6XHIxhjlVcu39/X2OPHps4zkWPYHroqvi2BFKxf
MSlM8u44ttU1uUH4moLxd86lXbj9B1uMF6da807FshniJieuT2AhsQy0st1v
sIYHPy+NO89gQvKmBOqBdCws/lF9jMwsJkLF9iQs+x0m7oLZyL2fxZoMegJE
QzMwL+KDG17pc1jZKs/I7UNZ2JaefMls0j9s+KB/dCttDvaSsc80mmsBM9S1
FGeLzsF0R+78knq2gP0W9XWQZc7FIm53kXg8XsSU7mabKMh8wFgqr+tMRS5j
f+kGLwQ/zsOKHvJ13KNZwQaMQiYV1POxU46NTuJ3V7Cz9w8rPRrJx5JJuULc
bq9iWoQ2sj79AkwGyuv+XF/HinJ8r6zoF2Ed+86fuLuCLF/67iHDF+zaL/q/
wlc2MKA0Sewf+4KVBDjRuFzaxBrPqWuwJpVghsVE01HnbUw+peF+iEQ56qvj
ItPsNtb0o5B66VM5do/bvplPnQTsXaPT3PUrMG/HQh+LKhK4OMUZ2+ZRiemO
elbldZBCxtBQiM5yNaYcysXSzEIGYWtjrRnJNZi4cKPbqC0Z9NjRJI9b1mIH
zgsdYB4hgynKWW1oqMOGpvpOX1skBxPNJ5GHZ75inVERedEqFBBtcfw5d00j
1iClsifNnwLuilyMe/KqCcu9FJvdQ0kJBwOY+TrdW7CgRcNtVSYCfL2zSBaT
/A3zfrRyzNyGAGUCFbJ9Qm2Yi1JqqlsiAX7ZDkVZZbVhZr6kps8EiTC0mmJB
qG7HuDc/PdtUpIJSg5n0E2ydGEPi2VnGG1TAEHVLSb6gE6PCDuhKllKBfU8T
d8iJLmwm8OLEqUN7IDJy8WVaajdWQiGgWmZFDd+osB4ft59YbkpbZHcCNUiX
2x19LNCLpeoHDs7+ooYhgfgtk+FeLCrsZxiPCw1YtZOn33Dtx+xoH3bdukYL
FhF3zh9uHcDMMjGxhC+0sMUeOv9QbRDTNZ0K+ECyF5rf8pTGvx3ExKMNBH+H
7QVjLw332tAhbOPAtrfeEzpg4xNmZ7D5jTXtVdxDYbcfnr3iep5+aBxrM6KP
b/bbDyk3HyS9rxjHuu9OCz55th8Yu9LmyjX/YL8p3+hK9u6H5hrh8iGVv9jG
JnOg9cn/YPM193a36iQmOr26lHGCHsQawpkvSc5iYc3Fv49bMgCwirCNOy5g
UbRPL3NfYYDj/z5dVU1ZwGINr5BNxDGAQypluvHYAvaiRpI78DsDHJR4WvXs
/CKWX/LiZLoFI8jftd1yurCEjWQFtW0dYwLy749PrtuvYNr39creHGGBm4EJ
Wa6j61ig4ce0tosscLo6212FdQMroeSL2YxkAft89ju3jDYwVT+Sc+aNLHCi
87LgrawNTM61iGbbgBWYmfg6tC9uYvw6MlaW2mywsdjvcu37Fua49QKCTrPB
5Se+k2Ik21jSZzrRjEA2oGbLtTonuo1xSE9ukJaygd1/qwY+/tsYI+ebV5lq
7HCcfovsv30kQFjmmKZQ4ABYVxoKSCEB3dyILikLDhjYgx0++4kEbl1YK7O5
zAGjxjG1bPUksDXcFZOdwwEkEomkSxMksNz6UMVWkhPag7qIt6RIYTyd6s4H
IS7gmKgsj8oihbNSa3tl9nKD8IqB01w0GRj/DE1h4eKGd4PcXgdfkIF8KKMG
iRQ3GLq/XhHNJAOKX9LuLWbcsGbPV9xbRwavopwbLsRyg0Yi96nPW2Twa6oj
JJ2dB+wCmC6WOpFDzRNHrofiPHBP40zEtic5ZOnN5vlq8MCx1+8s+f3JIeA5
zYiBPQ/wn/yjyRlHDhwm2jpjr3igQErS4HslOZzIeL/NJ8oL33NnzRM5KACs
NR7TqPECb4rzB2MhChCm+Cr5z4gXSkTjGH/LUMDKyVG7igu8cKdePL9ZnwIe
0XB+ccjhhZEm+sl4DwpoPx9+7bkyHxiS6dEJFVOAicjZOaZD/PCC2ewq/2FK
WIvwKeqz5Ae22GnVT2aU8Hb6zp3kc/zAKL3yTcWaEig+prLKhvCDlXNmHZ0z
JRRqjmuZVPMDi6X05mowJQhauD0M1hGAAbkXKqOFlNCRf8PW0FwAvDIWlG+W
U0IQ6z3B/84IwOkGBrU9dZTQ259RmHhLAFraZR7MdlBCjOv00OdyAch8LBxK
N00JJDcvyc1igvBc6N+Xx5wEyBoM2sw/IgivyEvvHeYjwEndh7X+9oKQLT8W
OiVMgPw9H07S3BSEUM0lI1p5ArjHLgQLlgjC0J4OrjeHCdCTdrXDVl0IpC1a
hh29CBBCG5bIZywENlwCF+EqAeQ94l3+nhSCHDmDk//5ESBa/vPG1RtC8C1q
JjPyDgH0S9f4YwqFYMjy9fn5xwTI7fD3qVcWhqJUgkxAIQHe3nFyHDosDMnr
/Vz/SgiQqGh0ZN1GGCSPsZbZVBIgPJ5FRMJfGOh+CYaSNRLgjO2H3uhyYWik
SGL61EsAht/jOtaGInCbdOLL13UCUMe1SF86KQKs5qKXr20TgEQ/nzPcXQTM
ImLDWcmJMPkmeLkoSgRshqkMVKiJUO3G9e5guwjE6QlOzDET4co/c/qxk6Lo
vk9kt5chgnuy6va2uyiESNE7npInguNxnkmWAFEw+q2TY65EBNNP09WGSaJw
guXsN24NIgjduOub9VsUfrWJ/j1kQIRustIBnwtiwPFR6OEvWyI0f0hpigoQ
g3XbIhMjeyJUOd0rfHNfDPpHWl9lnSZCTs2J2J4cMag4pXnd9hwRwsMXDmks
iUFs8UlfKw8iqNGLvqe4KQ4qY909/TdRPlKb+qb74kB9o5OnJogIDnN3hx8l
iYN03Vp2ajARbrf+YRapEIfEM7ZL5qEoPiot0IRSArR7py1OR6F4GpFjjyIk
QCjYSN86gQjza9bu9s8koCLnvXLfM/T5v2EhwpkSQDn5Otk2kQhp9eOFhc0S
IBJeKmX0EsWHvuX79Z8kvNlftT2eiuIphBeF4iWhtpdLSTGHCEwLVvvm3koC
Xahk2flcIrwdDhUp/CwJufDj69MPRGiqGLMz/ikJf28dT53KQ/FBb2o8uaRA
sZOK6FCI4j27BlSkpICnQEvXqwjt34G4TgZSQCrb6hv4Ba0fc5aKOy0F9anz
ZA9K0Po2BeM/J0tBfvJFktsVRFCfssy9lScFNyx9Ll+tRPvvDWk0qpGCe/Q/
DZyr0PqLRkn6x6Sg/2H1EfUaInBptMsHMUoDtcu4SHE9EZzXHz5PsZaGM3v5
5PlbiRBrOlnp6yANBfeMczuRy17q/TVxkQaTC4TMkG9EYDFYUVy6Kg2xjI+V
f7URoS7WrlX/sTRo23BFXP5OBBFJYfLx79JQstkmLP2DCJZBQSJf+qQhwbZT
ugT5VsePI9Ej0lD+0VrG8CcRflyPfKa8KA3fhPKUbHvRPNTOK9xlkIFrq3Uc
rv1EmHAodhE1l4Hqstts4kOo/kem+1s2MnBchLH5GbIu0TOvzVEGlI+TDtIM
E+FZJi/ZDS8ZsH1eqD6CbLwWmvD1gQwsPxi4eGeECJkxx5rdW2Xg9/kh48Bx
VH/03QJ0y4AD+aeQHmSCKiU744AMtJqHecv8IcKpgU/OxTMykBI9HtCHTCfB
SUq3TxYO1Y3VCE4QwaNmTO69iSxwb58aCppCzwsy3MQtZcFu+YpRM/L+Is/X
aadkYTnznT/rNBGy36/SJ3vIwrB595EM5Pl4mvn4B7IwdklFvGqGCNoHWkWY
nsqCo7GsPXGWCDGRsadjXsnClQGewMPI8rc4v0V+kIWoOZLnDchX3KSyb32X
hdke2ZyyOSLUjPwb2+6TBTfyt9XryMwOBQf9R2Wh2UlzXGGeCAUWWvevLsuC
URGl8xvkVQ3zi+6scqBf9y3r5j8i+O2/Km5pJwdXsvgvUS0SoTFczan9rBzQ
hpXsVUTmpCR5ZnZRDjKv5k47IpeshtEY3ZSDsmGxu4XIJMNP/2Iv5aDIk8zj
9BIRzOzseYvT5OBEb67/XeSXXXw2qrly8HlGcSwbWbsxo16+Ug6WIxo7NpGD
80reiozIwd/9NA7Ry0TokAoeSJ2SA80LbhEfkPnTD7HwL8kB6++rAp3IVYmt
oVxEeRBWvpzFuoL6FzZ07oCIPNRUjh19ihxuQxDYdJcH+Vb/wuBVImhK0y79
8ZYHt3FVqufIc5T0tZ1+8tAQ9e9fHrJ1Dqdr9j150Lo1mz6KLEClkHkmQx5I
/h4q0VlD912faoDZR3mwPLGfzwb53gc4ovFFHpSfUMp4Is+fMp5japQHk64E
kwTksrwzCg0T8vD+p9u7KWTvCFfCp3/I3Rp+pOvoPj3t0fV6HeXjpyJhRI6i
veHrT6MA3u9OCqghnzzzsFhaTAF0HFgIt5GX9pfrPT6vAHQvA6n3bBAhfbSG
6baXApgsESNZkO2+NI55XleAoi3WdiHkKufuu4bhCpDDEZCph/ygZKZpM00B
9o8mfAxA1o1dTPybowCHVVLd7yGvuK57dH1WgNIouZknyKcYifQ59Qpwv33F
8iOyuDuXpdMfBWhpYKkdRR7Q4hc6OqcA21kCf+aRY5hFVzRWFSCd5+/PLeS1
CoWnzHsUgb3PVJFpE90XrCb9DcKKoJPh/U0b+UztjXMyLorwS3dAIRbZSV3Q
dMlDETo/mwQ/Rz6X06pQdFURIq9SZ6YiuyQIUOqFKsL4voTHBcgXPVpeW6cq
gh65WPcPZM/fvhGcWYpgd4KEeRj50gn+y0N5iqCwqKo4geyt46vtXq0Ip+rf
Ma8jX2fmG7z5G63Pi+4y6xaa/3tNdbqTilB8O6mcG9mf9Fr2ngVFuH9ZakEI
OXCi8WYMuRLMqNIQFZFDSq9wveFVgu6knGkz5IfODSebHZRARtea9RZybK+3
ToyLEnhnXO0MRY47elDM2lMJVtNi/COR49W81wZvKsH94q3weOTEfVxPFhOV
QOuj6btM5KTbdYGFqUowK0dSnov8ctXL5WaWErisCVd+Qk4erlXaU6IEN3I5
o8qR0z9d6uToU4KRznv6HcgZ4hwlg7+VQCqFqq4bOfNlTUrqpBJExUoq9yFn
R7D7SG8owZdDgSMjyPn21Qd02ZXBnMXjxhJyOZH1qNsJZTi+91YDwzYRRl9L
GvacVoYTsoeTWJBpQVfn0HllaHfbf44D2fqahwLfDWXgP51fwYc8M17N+vOZ
Mji0VNXKIDPc+Ul/OEUZsi9951dAVuWZo/mUqQy8R35cVkYOOcGx9bBEGYQT
E8c1kTkbvIYMB5RhbxmvnBGy9rmwnwXjypB5cVTAFNmFLLFDcE4Z5jhtaI8i
f1StryEjU0H1pfIskY3eHXxXyKcC/md8/U4j+95rvCzqrAL5fGRUPsiJwkPu
8R4q8GDNwvgqclXV8lnCNRV43SAW6ou8f5PXeihMBahqaAb9kd9c8FV/mq4C
tyV4REOQG/fcV6D6oAI3mg8IhSHPpyRLXilSgcClUvZwZM3+Fu5jjSpAl1k+
GYn83VSQknpaBd5d6JCOQ177q7Z1dQnlI9mcfoTMHXp0eWRLBTiLu1Pikd1L
/f6U71OFv7cFtxKQyaXbm3xlVMGK6o7tK2SZ/wIf/fFWBdObDn8ykQupuoRr
/VSh7G2MyHv8eZFIFiXfVoU2GHLKRraY+fnLPlYVOAc5m3KRrzQpiXR+UAWe
Ab5zn5C3q6KKPhSpgqffoaAC5LAvIyYPKlVhtIUr/jPyk3cxXsbtqkA1L/e5
CPnL3ZmiinlViHqa0FCKrBekb5q0pgrBZgery5Cbrz0f8CdTA1FoLSpH/uVs
RKlCrwasrfPPK5HJ9N+YvpdRA8mv9Yq1yAZk9oMJnmpAqydd24T8bTXvsu81
NSCICkY0I9vM0RKsAtUg7j63cQuy20ChKH20Gmi/MKluRY4qYfIOe68Gbvwf
49qRmfMvEM59UoN3p1e1O5CTMqvidUrVgD0lfgp3zjOv4q1mNThOul+tE7nj
ejPBZ1oNWhz3FnQj23kJPDm2pAb8AqZHe/D5d/UTk95Sg1xnjXHcy9aiZhN7
1QEa9fb9RGZTCnlyWkIdnlL/0O5DdvinIW7qrg6KN2b1B5H30pO0dnirg/XC
lzrchdIVl0/6q8MvISeDIfx8XNQvcolSB56a81rDyHXjpobB2erw6YsH+wiy
D/G/6T2f1dH3Gd5I3LyC7Q+iy9XhweelDdx+Z6x6nrepAw3xYNcosnS/vUvB
gjp8bpK7Mo7ct8FDi22qwxmXvB7c4ey/31dTakDfmWi1P8i/rV2W25g0wO/2
xTXc8e2eIVPKGkD34v7ZCWSS+qBkXn8N2Ih3XJ5CzhzTMUi7owEcTik603h/
CIRJqSgNiDNJicL9USdcTuOFBpQcmeWewc9rycMKq3INIOvXUJpFZuyzONdf
rwE0rgu+uCvWmajPtmlAaeH9ItwcKglHvYY1wCwkTG0OufXD64F7lJogEbFX
ah7Zv+3s7QN0mvCGxccVt+ickPBTJk2wChp/hfu2ZIbHGyFNOESyRf8PWTnt
41b5YU24JK83jvtlYjXHcqQmMHFanl9EfmYr3nX8kSbsk9B6hDueLebBx0RN
UFrxKccd9ciB4PVeE+QIDYxLyNej1mcmWzXB5N6VfNw+xo7pRj2aUK1N7MPt
SV3vlD6oCUFaK2TLyOdCHvU4z2sCvR2FCe5jATKVQwcwSJqj/IHbRD3eX4sD
A4OWnnXcBmtbSkn8GDTc5OZcwe+TK40ZdgoYpCXuO4Vb7KLzo25LDHoL8npw
U5x67tr8BIO7dKyFq/h5Zqfgl3iFQdAEfwfutZ7z/RHpGFx3rJrCPXtc2fxw
EQb+hVUH15B7TdrVq3ox4LFaDcDdRaO6zDuCQYBBaxzutvqknKApDJZpDDJw
1+ldFMS20HpTuLtx/0ikoOrbB1B1NllsHbl7U+ksLQPACfFsDPd3W7cKNRbk
Sldz3K1sbX5PuQG+z//xxV3z6MWclQwAt4pmJe4PUao/244BSCwpGmwgOybQ
URZaAqi2Jljipn87JPnSBkC+tM4Jt2d5+C0PRwCbmIBA3OILP0RovQBUWLzz
cP8keW/+zwcg5LlcBe7wvcH+P3wB7qdWNOMeFxT79jYIxfccG8OdfOLGNb0H
APojxkybyObnjrwSjwMInkngwU12ma/xwBNAv4tLxXE73Pt6cCgJYEg/RBs3
Ryl7bUA2QB4przvuWP4vjAUtAK8f0Bbg1pGJxl60AyicGCnDPa/h5BrSBcBy
JqEet5kVbbHFLwC6iy9/4KYNt3WamwaYsRdcx130SDqqex5gRH6NbAv5/GuK
gtIlAPfN99S4675k0ERtATCNVLDivj2zkStKpwWWXtGKuOU2Wnv/o9cC/UMB
GriHqFIIq4xakEQ8qosbeE1sajm14EZN6lHcGxbPSZ0ktMAsidMNt3ehhtlz
Yy2QH4h4gjvPppasx0wL+qVdX+BeWjPLYziuBar8kim4fdWc2O7ZacFgvmc2
7oAv4b+vX9QCr8rBatyltgyP8720gOQC4Stuks3nh+evaEF6EGMr7lsaOVmu
N7XAQWOhB3doSdc162gtGFUontzZ76nTYrGxWtDhoTmHm3r7b19LvBaQf8pY
xH0P29I+9FILNEqObuGOLuPfq5irBS/Gaui2kZ9WXHp5oEMLpIZTxXH/dFw3
P9KtBe3bXNK4OcjvECJ6tUAxO0wOd6JOvBvZiBbwxcmo4n5dVaIwt6gFnVP9
+rh/OxmMi69pQangn8O4BSnbnrpsaYHcnVFj3G/1RrZ/EbTh5Y2iY7gzamga
mpm14Udjux3uqXNxftQc2uCQ7eeAW5J4UEqfWxvUjdjO4M45JBtbLKwNqQny
Lrjz66xPZahoA1Pa30u4SxtS5u+e1Ib5joBg3LksrZf87bXBNfnsHdzJ59Zm
Pc9oA+eYbijucLIjM1Zu2jCnNxWO20J1ZULghjbYj40/wH0ojNeN9aY21DU/
isGt2mn8lzZYGwaENeNwH/R6Of4vXBu+f/SNx/03zXCk/Kk2OFakJOLuXfZ2
ykvUhkVbniTcLXovht++0gYJkscvcX8c/Dd4P10bluo8k3HfZH3eb1eoDd2a
g2m4Ge7OdK32aINhTOMH3IQuVqupPm3IXVj4iHuVX7dzYFAb3EhY83H3l8V3
1P7RBtWbFgW401a0vsWtIi8mfMH9TN/d7O6mNqwfSS7GHRX7qMWPVAc0Yt6W
4PaWnmg6s0cHGulSynBrusQ2yLDqAPsTjyrcMvklhwU4daBl0roaNz/FnzoW
Hh0weqNZg3tPkkbttrAOXI3ersXd0TVa2aSsA8nz1l9xux5SKXa11oFr01e/
4faiXm1cddAB5hLSdtx+TQW9d1114PbTmx24o82VN9Ku64D/v+NdO/PKtEKj
GqwDbSNZ3Tvz1/OJvSFCB11gGz0782CvpPb3mQ5sPPXpxV3Gu2x4PQXl93nV
h7t+JN+GOksHhg9V9+/0x03xumipDvB7TA/gJrum8Pn8oA58U//5Gzet2mLd
2h8duJBRNYKbcetjd/i8Dvy6+GYUt/Bt+ZV0cl3Qn7Qex61O/ZH5K4Mu7Mmb
+YP7SLSc0oSALgjWu03gdmT6YEmjpIu+hzdN4r7yTPaKmIEuXGo/ML3Tn7cy
eW7ndeG+5dFZ3EYX1kjVb+hCipjxHO41mUpT2nu60LBXZR53+lJEQu8zXdjc
YP6H+0SRxXhGpi5gq+M7LtAdDTJp0YUpltOLuJmar7JPz+rCd/eXS7h9rPbk
RdHrgehKzvJOvwaemkrJ64Gd45sV3LLnxcdbjutBx6dbq7gf/CsO8ryqB1Er
Omu4zw1OBEjm6wGfk8f6zv5bWP0mF/TAI/bsBu7/ig/5psvpQ3OByCbu0XSf
Ky5e+vBxoXbH31eCQ33W9GHld+4W7ir9h/G3bh2Cqk2lbdxDhvkad0kNYE/E
zR2THvkxdD/QACLpM3dMYmAwz7xpAF9ZG3etlU+a5HsY5isHd6yb0Sn0mcQQ
rvbP7ziMedmkLdQQ6j7j/2ZTwYayBNUIpRH8Itm3Y0+bMxXLwUagdYp5x8LT
RjEJtMZgbcm248EgeScszhi+izHu+Dq18wsndhNYeU27Y4aYJz/uvjSBs1TU
O+77Npj2lssUlpZ3nbpf1Lc2wRT2MO7d8cdyfvurfEfA3oZux+VeB/WE3h2B
MZrdfNuTj+3HGcwgy4i440TuJA4NCzMgT6bYcZZpU9Sxh2aQHUu+42K/NRKX
VjNIcd31zHDgVvWBo8AVtGseI+IGn9VR8GPZ9fnI+MqtuKPQMUe6u54WkYie
jqOgSr9rbiOG/g2WYyAYQLLjezVb0tx2x2BZadf7ORdMyp4dA3fRXcdc/nPe
ofcYNGjsOqyKXKOczRzOO+zaj5FrH+8Jc/C7teuHLx64f31mDsaxu04ToWzw
HjAHx//X644Knnt60AKOG++asEDKWn7KArhFdm35sOer1GsLcKHf9RvpnIDE
MQswo9q1S33maJPocTAg7lrEMd1088JxyKHZNVlnTmBaxnGo/W/XPw9/zj0+
cRxImHfducTqaShlCeEsu257fV0Cu2wJ/v+vNyI2+jE71xI+/T/fyoej6rzz
lhD7//p+ikPXLKStIPL/9bcLvPJCLloB+/+d4m3rT5prBU8od20kra/nt2gF
58l3vadWteuyvDX4kO261k7K1e2yNfD836pEs+y8z9awQbrrrGxPdI6tIfj/
/h8aMD1O
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwUV3c8V+8XlxBR2SMqIXvveZ9jbz4fSSESQkYhIaMUZYQoWV+hREgho8Kj
KDOjhChERkKyy/75/XVf53XvGe/3+9zzPOeo40WLc5QUFBTF1BQU/3/y3dnM
yTxcR9za4NsYDYpAL2lFjni5ZaGj2NiPlecmqgt8/ljYrRh9tQr0E6q/iRql
fVxp3N6g6VwH/9hDkSiEbfvVdvY7dLrzbaLY50iUfFeX2IhrQrISA5n68VGo
ObbLYNm1E+m+XrF+wBaD5iIYfgYWfkJmzcrO4j9iUOi7YpG/2Z+RS6+h4lj5
bZQMK88X476gE4kUJ256xaEW1fDXM67f0XCD4O6LqQnoqTrLVYXiYaShdaVm
nSsRzX9zzvIrHEH9FwtSz2UloqsHaX8sZI+i7ByFca3Kuyglxcz1T9xPVPP3
6eBpjvtoSDE7SjJ6EnUMh5/cX30fCfTOF3hF/ELJk+8TE52SUQnr/ZnpoGn0
MjesOe1dCmpN/OYz6foHba2FNGS+S0dRqckt92TmkNZne6HOxP+QuBuykSue
Q7vvZIWvnctAvnsSg30L59Gl7eLXY7yZaEtXvnYuexHpsP30GV7IRg/ZBs0S
Di+hxqIObRW/h0hn/OZ3qYwlFBRS14lWH6LbEV8oLqYso8R793ZV7M9BnO+C
tH/H/UW7+jSHNs7nouq7/N2x9P+Qz/PIykD6PGTv2OYsHv0PHcrNafQqzUOP
dx2+5RGxiqzjaxZk6fORDNQ1/wpaR8cv8Lurrxai7gPu1tH/1pHi8KfslLqn
KPA785Sw/wbyHuKzJN8pQrVXnendfDaR+mnRC9Zqz5ER3mM24bqNVIsUz9+e
KUEy247L7HPb6Fue5x8n31IUy3umg1+dAsaeHa1aWS9Ffo5Vly3fU8CD8sy5
9INlSGfC+31F9y4YoV07SB9VgZQjD3N2cFLCqs5L4R8SlUhcuM1j4jQldAdr
GjH1VSIWdyEWjnFKGLRaP1qv8gr9+D14NnB5NxwsIae4yVej3vjbFQkqVOBa
6P5kdasatUqp0BWEUsGz4AUTr44a9MInqaSfmhoixg98UAypRdeXjbZV2Wmg
K4+313ZvHeLdfJmxqUgLtK/KzgXzNiDWzHNzbMG0kFHO/ke4uAHRIhYdyTe0
ENunrxwIjehP2IVpe306cD/AlvvbvQnVUh1TfXtyL1QdZuGPH2pBdgx3v9wI
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
e+bvXwYs0QOlAtQ08H8VcXSq
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.558094779367236*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJw11GtY0ncUB3AE9G+uVppRmTot/Vt2sVptmqvzy1YtF0o3MWsO71YEXqZ5
STMdWiaKYtvIvGBZsDCdPNVyK2WZ0kqq6WaWYlLO1JqKNxCV/r3Yi/Oc5/N8
n3Nefh2DuXvDyCQSiU7Mh637mlPM4EZt+YWpnDAaMZQZ6rL8Me4D2SlzhHYz
GGr+7/VRPh4IwZf2rvGcwtCQfFsOG+fA/MGO0HgdhtJpI7aH8VSIyxx++nYI
Qw+bvHv24bngfsNG1t6NIW5Z/ANfvATqrI6z5PcwpMjJ+Y2OX4fmZssH4VkY
MjWLwfqO1sETbsMtCRVDu04F8W74NcFHb6RXC7PN0K3EsM6KpyoIk6wo77Ey
Q+0Bx9xiTrRARaFVrWW+KbLcyQ9XoDawZ65p6V1oiua1htV8fugFpG6XzxIV
UtEyB7aUF9wFU8l/eVfNpyL3zuMPtxZ0Q80ZJz63iIIUk2m7W4teAUPR9dZi
MQVF1imVd9N7AH/STGeUkpEo5KrNAlYv2Lj43Z50IaPV/t3jM2F9MCbd6ZV2
xQSpR3xVaNcAmFPYj6pWmyBt1+K1tAPvgHpGH1v7MwkJriVFMJmDYHvAEXd1
JSF8rjk9oWgIng9N1GSFGuFmVNq13NJh8M47tT+aNQOtzkJsT4EWVj1n664f
nwanjJbl34hGoOPkqrby8CnwYHRtKC0ahaYqh4esUAN0RvG28HPGYFlekiIm
dhJqPA7OuZ8/Dj6NV7SbOHqg+TW1S3gT0C91x5lJOgANKf+P73SgsDNyNp+b
ABEtcg6eoIeIvh+17VnjkF5yJGvj0UlIDfoh4c/zY1Cs+qkxN8oAIesiPKLz
RiGFIxyyi5mCjHz2XA1/BAaCli86GDwNC0raeq8Ua+HcdD9VHT4DceQFBkfR
MNS+3Tn4cYARdsz/dd5wxRD84+yu2eREQpLIT05YcwchckWIm7CChFgBsV7y
I+9A4Xcoeau9CZq6XGA1mTkAn/r3S63FJmhDqZ9/ZXIfsDN2tG1eQkYMbU+5
ubAXzoSbT5oIyehlmHqhTt4Dd+yCjP3WFDT7bDJ5v+wV3J7JpLjmUpCt6eth
ZlM3qOTb+vmWVCQI0lQKYrvgvkN4Y04BFT3Tqx6Jjr2A728dEHdbmKKX2/aO
aSVtcHhpR+AhvilyeGc/y/l8Cxhuui1ZiZkhhoBK9+E/hpOUvkfnU80QUnLX
XaIpgebkEeRMwhBKefFsn6EOTnD8Ri0SMeSwbn2cWF0Ntp+FKvFkDKV9kTiC
F1VD/XT0Ra8UDJG+qo+WMavBgs//Muk0kd+52MERV0HJtYbCvrOEF/2tusCr
hMY36zcqLxBWbZdr6VKwDpkbz/uduPd0OVmuLoPbrnbe4rsYqt9zI6GSWQaB
Wlf7O/VE/jSzP0pcCpLTOxpHGwivquu4yCsGz7IUWmgz8U/jphiliyC4c+Cm
l5rIfS2zL6sFgFXoswNfEtYHmMWJ80DGxr5N0hDeL9SV8fgwbliK1fxL2ILa
qaOfhWybAKbjIOH4ngqJOg3cNBErNw8TLvdcK+WlQKs0zug/QthfZm3ikwj2
HvlXBROEG/id1eoouEcqTZbpCY9OZVj6HIFIpcxXaSDMUu9WqFkwW1C77PU0
4bJTKzVqBvzfW0SVlXzosfceHD2o
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA+EtunVBvcD5jr5Dv//8PQIZkJyjP
Jk4/E/saJjv8D0DN7uRqjSZeP8RGpVx2+A9A8LNDjGwmbj8m3rnJ7PAPQIIW
8xxcJn4/6Qzjo9nhD0DLx0rlUyaOP3BqNVizww9Ab6B2yU8mnj9+JdrAZocP
QMGMjLtNJq4/mpsjks0OD0AFBnIH6Wq/P6DfiG9RCQ5ASX9hhbVWxz8X0FNP
KRUNQLd5Zd2l0c4/yVBTRMslDEDZWmsvcnfTP0opJXQjIgtAEUeNZsFA1z88
rlymzy8KQBDUZbI3W9s//IpmEzIpCUAjIGyphWLfP/f3pJVeJwhAON1ty0GS
4T9kEUka3zYHQMH6gEzUm+M/oIK/2RUyBkBov8jIvoLlP0ygm5ugPgVAmWOn
GhVg5z80Tqxy9U8EQC1Y4fb+Zek/6lOPhABNA0De80/OQEnrPxEG2JhfWwJA
8t8ZMBZV7T8HEPPndFUBQJCremdXV+8/OKpCTFRUAEAmDwhNeJvwP7Th72UP
yf4/tnCAq46f8T+UHv+o4sD8P9QlkwdRkvI/WLTZ8F3b+j8kg9MoXZnzP7j5
WK5Fzfg/OVDfNJ+b9D+OX0GWwcj2P91whT6NjPU/Rh71guXm9D+yOVkNxZH2
P5yMTeV13PI/FlbH2aiF9z/UU3FMrvTwPz/iAJHCdPg/BHf8u/Us7j+ZFmgN
Jnj5P5ylX8pnH+o/gp5phzVq+j/4hVniKVfmP53OmMaOcPs/jMWc5cQ94j99
bpPwHXL8PxiMZHsQb9w/62EoGFli/T+o8Lw+N+3UP4v96gTeZv4/UCdQsR+S
yT+67EfvDlr/P8BoAhcivrQ/AAAAAAAAAEAAAAAAAAAAABKkLLE=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  PlotRange->{{0, 3}, {0, 4}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.558094779384171*^9}]
}, Open  ]],

Cell["\<\
This is case four, founder control.  In the plot being shown, species 1 \
starts at the higher amount so it wins because started off at higher \
densities.\
\>", "Text",
 CellChangeTimes->{{3.558094887281221*^9, 3.558094913007622*^9}, 
   3.558094951558415*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "1"}], ",", 
     RowBox[{"n2", "\[Rule]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "3"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.558094779392198*^9}],

Cell["\<\
These are the equilibrium points and below Eigen values\
\>", "Text",
 CellChangeTimes->{3.558094876061667*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", 
    FractionBox["1", "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.558094779393899*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "100"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"how", " ", "long", " ", "to", " ", "run"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "parameters", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]12", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]21", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"initial", " ", "population", " ", "sizes"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n10", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n20", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"numerically", " ", "solve", " ", "model"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r1", "*", 
          RowBox[{"n1", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n1", "[", "t", "]"}], "/", "k1"}], "-", 
            RowBox[{"\[Alpha]12", "*", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/", "k1"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"r2", "*", 
          RowBox[{"n2", "[", "t", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"n2", "[", "t", "]"}], "/", "k2"}], "-", 
            RowBox[{"\[Alpha]21", "*", 
             RowBox[{
              RowBox[{"n1", "[", "t", "]"}], "/", "k2"}]}]}], ")"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "n10"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "n20"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n1", ",", "n2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "n1", " ", 
    RowBox[{"(", "green", ")"}], " ", "and", " ", "n2", " ", 
    RowBox[{"(", "blue", ")"}], " ", "vs", " ", "t"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n1", "[", "t", "]"}], ",", 
        RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<n\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "isoclines", " ", "and", " ", "n2", " ", "vs", " ", "n1"}], 
   " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isoplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k1", "/", "\[Alpha]12"}], "-", 
        RowBox[{"n1", "/", "\[Alpha]12"}]}], ",", 
       RowBox[{"k2", "-", 
        RowBox[{"\[Alpha]21", "*", "n1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n1", ",", "0", ",", "k1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "k2"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"n1", "[", "t", "]"}], ",", 
         RowBox[{"n2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"isoplot", ",", "dynplot", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "k1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "k2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n1\>\"", ",", "\"\<n2\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"eq", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"eigenvalues", " ", "for", " ", "eq", " ", "#1"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"j", "/.", 
   RowBox[{"eq", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.557663825875552*^9, {3.558095028147911*^9, 3.558095031196061*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
zA==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
NVitKu7XOvwvr7zCf2Fl5f/9f8XeWu0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5580950317636137`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJw1lH840wkcx4f15OiILqySdIqkEkVR9xZdCv0gnbpTJEWrREl1Ty1zFv0Q
XdIP1MKceGw6Px4d1S47d/aslB+3dNq0FsPYaLNZ+N73/rg/Ps/neT3vz/v5
/PdyjDkedtCYQqFsJee/HXRQ8Zrff/CbWw7mWoIgQA2YkyilbUT9hJXg3CQB
z/u3C6pp4XjTZXdj3EAg+IX410JaLGi5i1d+0hKIiNU9+ZmWjAJT/2O9gwTe
rcgIyKKlgz1y5qNITIA9e/vFy7RclDf1dt7hEWCaVjtfopWgMe55nWcUgd17
HvDUIzWgD0zT9lRNwZxgRgbOfwbLHu/Lcy2msCh0WNF0RYB/VsvSMhImcfrl
WtzWtGBls53+6O8TsK2xkhgZteJ8y3qB1GECdbIAUeu6NoRNV80QJX7Gc3rh
3D3KDuzg2D3uFxigXbzesvKYGAF17o25TgYYj1fMnLvoLfhGnb6PU8bhRUTX
7eR2w4MfZ32kQw9R+qqXza5SvJCcCNm2Wg+HnMHxh8M9UHubmVRk6jCok0o6
3WUwo+bMvNk3hpKBBqHFtQ/gmhXd1a8Zg4X9Lyq5XI6zSW6ZWVlaXD1ce4jt
1AufYI6IN6TBmF+FPP5CH1hR5VnBfhokewhqbJoUaO4t5CTf+wQpV3DlteMA
csrsfWxVo/hM78hf8uMg0oSzPQb9R7F0w/SpQw1K0KMmUkOKRhBY5Bj3yHYY
3cuPhzhr1DhtH7XwfaQKG5NeJWSHquGm3GUu3qpGmXN4f2isCrMs1aYCgxpv
3zsMnzYbBvVZPu/rghHomX+x6/9U4siqhq4vgkfheutSiPLwICq2xLCfjo2i
/KjvszTrAWgH58zszfsEGxeh1LNNgdqdgSa5GzXI2500Lk7pw4XNrPs1vRoY
H9fy8zx64fgu6E0xS4un39K312vk8PFOz6V5jOHqdd3fovwPiJzfOm7UPobN
TftnTOyRQSvMkiUydbChy33mT/bgNnVfcpiTHuyhjOV1CVLMktQWGQv0qMlw
OaVVdWPaeWb42qRxKM0NlXN834LycB9PZm0AJZLlf6pGjBN3eVnWzw1Yk7eh
pVbXgSdLM02tEj5jRqj0XUNgG6yCTrilWUzgDO9YwfCVVnQve9V+tnECC64z
9q+cJ0TVPTjJ900i1cxEIjH9A3t5Xlb2U5OwYwWl2Frykcp6wOwunwKlrO+j
d1gtKhX2+RYhBKIH/AvcGKXILGRFS7YRoGwPUXk6lSI2bGgRN5RAavUuf18h
B/MaG6u2RpB8Ll6xxYaDy9k/NF+NIcC3uLYqjluMeK87I2Znyb5nl+iBhI2F
6V9tnl5K3uskhmWMPEytOfeluIxk/gh7nfAmuoY+tJVWkP1L1MBgm5vIiaje
u+kR2Z/neiOeewOEa9hJViMBP79TS4slOeh+nX3PpJ3MrW3r3RkXUX9Rd6C9
k+SSddRtNizk+kYtKX5DslfMjiPcnxDMWV7jLyH/fV+p4EhS8duZFy3MfjLf
lOHhxUhB3rLV2aFKkultwkTuSSTJCsIdVSRn2x+okCTCJeSolK8huSrOeQPj
EKhGHSU5OpL1kxF1kmj01PrSo0nvUFJdrCIY36GRXrzCnfQSZUG5PI2xCf97
i1RZ238e+xepiXcQ
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJw1lH840wkcx4f15OiILqySdIqkEkVR9xZdCv0gnbpTJEWrREl1Ty1zFv0Q
XdIP1MKceGw6Px4d1S47d/aslB+3dNq0FsPYaLNZ+N73/rg/Ps/neT3vz/v5
/PdyjDkedtCYQqFsJee/HXRQ8Zrff/CbWw7mWoIgQA2YkyilbUT9hJXg3CQB
z/u3C6pp4XjTZXdj3EAg+IX410JaLGi5i1d+0hKIiNU9+ZmWjAJT/2O9gwTe
rcgIyKKlgz1y5qNITIA9e/vFy7RclDf1dt7hEWCaVjtfopWgMe55nWcUgd17
HvDUIzWgD0zT9lRNwZxgRgbOfwbLHu/Lcy2msCh0WNF0RYB/VsvSMhImcfrl
WtzWtGBls53+6O8TsK2xkhgZteJ8y3qB1GECdbIAUeu6NoRNV80QJX7Gc3rh
3D3KDuzg2D3uFxigXbzesvKYGAF17o25TgYYj1fMnLvoLfhGnb6PU8bhRUTX
7eR2w4MfZ32kQw9R+qqXza5SvJCcCNm2Wg+HnMHxh8M9UHubmVRk6jCok0o6
3WUwo+bMvNk3hpKBBqHFtQ/gmhXd1a8Zg4X9Lyq5XI6zSW6ZWVlaXD1ce4jt
1AufYI6IN6TBmF+FPP5CH1hR5VnBfhokewhqbJoUaO4t5CTf+wQpV3DlteMA
csrsfWxVo/hM78hf8uMg0oSzPQb9R7F0w/SpQw1K0KMmUkOKRhBY5Bj3yHYY
3cuPhzhr1DhtH7XwfaQKG5NeJWSHquGm3GUu3qpGmXN4f2isCrMs1aYCgxpv
3zsMnzYbBvVZPu/rghHomX+x6/9U4siqhq4vgkfheutSiPLwICq2xLCfjo2i
/KjvszTrAWgH58zszfsEGxeh1LNNgdqdgSa5GzXI2500Lk7pw4XNrPs1vRoY
H9fy8zx64fgu6E0xS4un39K312vk8PFOz6V5jOHqdd3fovwPiJzfOm7UPobN
TftnTOyRQSvMkiUydbChy33mT/bgNnVfcpiTHuyhjOV1CVLMktQWGQv0qMlw
OaVVdWPaeWb42qRxKM0NlXN834LycB9PZm0AJZLlf6pGjBN3eVnWzw1Yk7eh
pVbXgSdLM02tEj5jRqj0XUNgG6yCTrilWUzgDO9YwfCVVnQve9V+tnECC64z
9q+cJ0TVPTjJ900i1cxEIjH9A3t5Xlb2U5OwYwWl2Frykcp6wOwunwKlrO+j
d1gtKhX2+RYhBKIH/AvcGKXILGRFS7YRoGwPUXk6lSI2bGgRN5RAavUuf18h
B/MaG6u2RpB8Ll6xxYaDy9k/NF+NIcC3uLYqjluMeK87I2Znyb5nl+iBhI2F
6V9tnl5K3uskhmWMPEytOfeluIxk/gh7nfAmuoY+tJVWkP1L1MBgm5vIiaje
u+kR2Z/neiOeewOEa9hJViMBP79TS4slOeh+nX3PpJ3MrW3r3RkXUX9Rd6C9
k+SSddRtNizk+kYtKX5DslfMjiPcnxDMWV7jLyH/fV+p4EhS8duZFy3MfjLf
lOHhxUhB3rLV2aFKkultwkTuSSTJCsIdVSRn2x+okCTCJeSolK8huSrOeQPj
EKhGHSU5OpL1kxF1kmj01PrSo0nvUFJdrCIY36GRXrzCnfQSZUG5PI2xCf97
i1RZ238e+xepiXcQ
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJyFzl9IU3EYxvEVUhBBDYRYBhWIEdGNUUQ3DzR1IKacbWdsaIPMgTA0AmFg
9A8cwkqwkURiUjeuLZBKIlgXFQWFQXRRN12V+ILQVf4LSrLtPM+VIF38+PLh
nPf9/Q52Xwintvp8Pqdyqr1UOx36Pngb7BBOBg9tm6obU7OYeTbRFXw9pmaR
O3X93ETdHXUYPb/eBtZ2j6s5ZBYK6+9u3VdHsZTpfbBaKKnjOF+aefTwySv1
MRrvFf3X3Hn1M77eWF28mVtU55A48unAyNyyOo/hqcR6Y2hFNdSd8E91RVZU
w+GlhTcBd0U19GHn9vaKWUOup9gWrZg1/HyaOu5WzBq+7drnVM0aPvwtRatm
Dem9rls1a1i6esUza9iSvuyZNTTsT3tmDY2LFz2zhvfZpGfWMJrv9MwanjdE
PLOGY9OOZ9bwJUGzhuIPmjV0+znPGpKDfD9riK/TrKHwkmYNqQjNGl7U0qyh
90/UM2u4+5tmDUM7+D9r8NXTrGFPJ80a6lM0a8icpVnD0SjNGpbbadaw1kaz
hsQZmjUEOmjWMOLQrKFF+1u0/3SMZg1luSx/dGm28l3zZc3n5bw8KU/Ks/Ks
XKN9NdoXlINyv9wvD8gDclJOyiE5JDfJTXKz3Cy3yq1yh9whu7Irx+X4Jo7J
MTkqR+WIHJHDcngTO7Kzif83v/G+jf4H6QUyAw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"n1\"", TraditionalForm], 
    FormBox["\"n2\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.558095031777446*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031881379*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5580950319345827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031938307*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031942418*^9}]
}, Open  ]],

Cell["\<\
This is case 5, there are an infinite number of equilibria (as seen below \
with the \[OpenCurlyDoubleQuote]indeterminates\[CloseCurlyDoubleQuote]).  \
This is called neutrally stable/equivalent species.\
\>", "Text",
 CellChangeTimes->{{3.5580950579846077`*^9, 3.558095086003158*^9}, {
  3.558095128609713*^9, 3.558095136298077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "Indeterminate"}], ",", 
     RowBox[{"n2", "\[Rule]", "Indeterminate"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "0"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n1", "\[Rule]", "2"}], ",", 
     RowBox[{"n2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.55809503194893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031950906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031952937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5580950319546337`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.558095031956388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.558095031958086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Bonus: Three species intransitive Lotka-Volterra competition\
\>", "Section",
 CellDingbat->"\[Wolf]",
 CellChangeTimes->{{3.3991608922276907`*^9, 3.399160904019662*^9}, {
  3.557645875912044*^9, 3.557645876845292*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to replicate the numerical results from following paper (on web) : \n\nMay \
and Leonard 1975.  Nonlinear aspects of comptition between three species.  \
SIAM Journal on Applied Mathemetics 29: 243-253."
}], "Subsection",
 CellChangeTimes->{{3.3991610959595823`*^9, 3.399161116196854*^9}, {
  3.3991612480886106`*^9, 3.399161321611768*^9}, {3.399161623388289*^9, 
  3.399161636095819*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1024, 687},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (August 26, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 172, 2, 76, "Title"],
Cell[742, 26, 45, 0, 67, "Section"],
Cell[CellGroupData[{
Cell[812, 30, 1563, 53, 110, "Subsubtitle"],
Cell[CellGroupData[{
Cell[2400, 87, 279, 6, 34, "Subsection"],
Cell[2682, 95, 459, 8, 41, "Text"],
Cell[3144, 105, 1034, 27, 88, "Input"],
Cell[CellGroupData[{
Cell[4203, 136, 492, 14, 58, "Input"],
Cell[4698, 152, 1138, 35, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5885, 193, 163, 2, 34, "Subsection"],
Cell[CellGroupData[{
Cell[6073, 199, 444, 13, 43, "Input"],
Cell[6520, 214, 1544, 46, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8113, 266, 364, 7, 49, "Subsection"],
Cell[CellGroupData[{
Cell[8502, 277, 203, 5, 27, "Input"],
Cell[8708, 284, 891, 26, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9636, 315, 774, 23, 53, InheritFromParent],
Cell[10413, 340, 401, 13, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10851, 358, 185, 5, 27, "Input"],
Cell[11039, 365, 326, 11, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11402, 381, 243, 7, 46, "Input"],
Cell[11648, 390, 264, 8, 46, "Output"]
}, Open  ]],
Cell[11927, 401, 637, 14, 51, "Text"],
Cell[CellGroupData[{
Cell[12589, 419, 206, 5, 27, "Input"],
Cell[12798, 426, 698, 19, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13533, 450, 211, 5, 27, "Input"],
Cell[13747, 457, 185, 4, 27, "Output"]
}, Open  ]],
Cell[13947, 464, 317, 6, 26, "Text"],
Cell[CellGroupData[{
Cell[14289, 474, 204, 5, 27, "Input"],
Cell[14496, 481, 934, 27, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15467, 513, 209, 5, 27, "Input"],
Cell[15679, 520, 325, 11, 46, "Output"]
}, Open  ]],
Cell[16019, 534, 539, 12, 51, "Text"],
Cell[16561, 548, 26, 0, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16624, 553, 718, 11, 64, "Subsection"],
Cell[CellGroupData[{
Cell[17367, 568, 5843, 158, 508, "Input"],
Cell[23213, 728, 31428, 523, 252, "Output"],
Cell[54644, 1253, 10567, 184, 257, "Output"]
}, Open  ]],
Cell[65226, 1440, 168, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[65419, 1448, 301, 6, 58, "Input"],
Cell[65723, 1456, 696, 22, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66456, 1483, 423, 10, 58, "Input"],
Cell[66882, 1495, 178, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67097, 1505, 6254, 168, 613, "Input"],
Cell[73354, 1675, 32777, 545, 252, "Output"],
Cell[106134, 2222, 12540, 216, 254, "Output"]
}, Open  ]],
Cell[118689, 2441, 122, 3, 26, "Text"],
Cell[118814, 2446, 765, 23, 27, "Output"],
Cell[119582, 2471, 147, 3, 26, "Text"],
Cell[119732, 2476, 322, 9, 46, "Output"],
Cell[CellGroupData[{
Cell[120079, 2489, 6091, 166, 613, "Input"],
Cell[126173, 2657, 25312, 423, 250, "Output"],
Cell[151488, 3082, 6861, 123, 257, "Output"]
}, Open  ]],
Cell[158364, 3208, 132, 3, 26, "Text"],
Cell[158499, 3213, 599, 19, 27, "Output"],
Cell[159101, 3234, 173, 4, 26, "Text"],
Cell[159277, 3240, 155, 4, 27, "Output"],
Cell[CellGroupData[{
Cell[159457, 3248, 5885, 163, 598, "Input"],
Cell[165345, 3413, 41162, 683, 250, "Output"],
Cell[206510, 4098, 6612, 118, 257, "Output"]
}, Open  ]],
Cell[213137, 4219, 271, 6, 26, "Text"],
Cell[213411, 4227, 595, 19, 27, "Output"],
Cell[214009, 4248, 121, 3, 26, "Text"],
Cell[214133, 4253, 176, 6, 47, "Output"],
Cell[CellGroupData[{
Cell[214334, 4263, 5883, 163, 598, "Input"],
Cell[220220, 4428, 17012, 287, 250, "Output"],
Cell[237235, 4717, 4669, 87, 252, "Output"],
Cell[241907, 4806, 445, 10, 40, "Message"],
Cell[242355, 4818, 477, 10, 23, "Message"],
Cell[242835, 4830, 445, 10, 40, "Message"],
Cell[243283, 4842, 475, 10, 23, "Message"]
}, Open  ]],
Cell[243773, 4855, 344, 6, 26, "Text"],
Cell[244120, 4863, 618, 19, 27, "Output"],
Cell[244741, 4884, 445, 10, 40, "Message"],
Cell[245189, 4896, 475, 10, 23, "Message"],
Cell[245667, 4908, 447, 10, 40, "Message"],
Cell[246117, 4920, 475, 10, 23, "Message"],
Cell[246595, 4932, 134, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246766, 4941, 229, 5, 67, "Section"],
Cell[246998, 4948, 466, 10, 64, "Subsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
